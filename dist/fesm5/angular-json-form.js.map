{"version":3,"file":"angular-json-form.js","sources":["ng://angular-json-form/app/service/common.service.ts","ng://angular-json-form/app/app.component.ts","ng://angular-json-form/app/Modules/angular-material.module.ts","ng://angular-json-form/app/component/json-form/validation-service.service.ts","ng://angular-json-form/app/component/json-form/json-form.component.ts","ng://angular-json-form/app/component/ex-form/form.component.ts","ng://angular-json-form/app/component/ex-form/validators/required-validator.ts","ng://angular-json-form/app/component/ex-form/validators/min-length-validators.ts","ng://angular-json-form/app/component/ex-form/validators/max-length-validator.ts","ng://angular-json-form/app/component/ex-form/validators/pattern-validator.ts","ng://angular-json-form/app/component/ex-form/validators/validation-message-generator.service.ts","ng://angular-json-form/app/component/ex-form/form-field/text/text-field.component.ts","ng://angular-json-form/app/component/ex-form/validators/max-value-validator.ts","ng://angular-json-form/app/component/ex-form/validators/min-value-validator.ts","ng://angular-json-form/app/component/ex-form/form-field/number/number-field.component.ts","ng://angular-json-form/app/component/ex-form/form-field/dropdown/dropdown.component.ts","ng://angular-json-form/app/component/ex-form/form-field/measure/measure.component.ts","ng://angular-json-form/app/dashboard/dashboard.service.ts","ng://angular-json-form/app/dashboard/dashboard.component.ts","ng://angular-json-form/app/entryComponent/services/auth.service.ts","ng://angular-json-form/app/service/snack-bar-message.service.ts","ng://angular-json-form/app/entryComponent/signup/signup.component.ts","ng://angular-json-form/app/entryComponent/login/login.component.ts","ng://angular-json-form/app/guard/authentication.guard.ts","ng://angular-json-form/app/app-routing.module.ts","ng://angular-json-form/app/header/tool-bar/tool-bar.component.ts","ng://angular-json-form/app/component/ex-form/form-field/email/email-field.component.ts","ng://angular-json-form/app/component/ex-form/form-field/password/password-field.component.ts","ng://angular-json-form/environments/environment.ts","ng://angular-json-form/app/loading-spinner/loading-spinner.component.ts","ng://angular-json-form/app/component/ex-form/viewer/group/step-wizard/step-form.component.ts","ng://angular-json-form/app/component/ex-form/viewer/basic/simple/simple.component.ts","ng://angular-json-form/app/component/ex-form/viewer/group/accordian/accordian.component.ts","ng://angular-json-form/app/component/ex-form/viewer/group/tabs/tab/tab.component.ts","ng://angular-json-form/app/json-editor/ui-schema/ui-schema.component.ts","ng://angular-json-form/app/json-editor/model-schema/model-schema.component.ts","ng://angular-json-form/app/component/ex-form/form-field/radio/radio.component.ts","ng://angular-json-form/app/app.module.ts","ng://angular-json-form/angular-json-form.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\ndeclare const jQuery: any;\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CommonService {\n\n  signUpJson: any;\n  errorMessageJson: any;\n\n  constructor(private http: HttpClient) { }\n\n  showHideSpinner = (show) => {\n    // this.isSpinnerVisible = show;\n    if (show) {\n      jQuery(\"#loaderModal\")\n        .modal({backdrop: \"static\", keyboard: false})\n        .modal(\"show\");\n    } else {\n      setTimeout(() => {\n        jQuery(\"#loaderModal\").modal(\"hide\");\n      }, 1000);\n    }\n  }\n\n  loadSignUpJson = async () => {\n    this.signUpJson = await this.http.get(\"./assets/signup.json\").toPromise();\n  }\n\n  getValidationErrorMesageJson = async () => {\n    this.errorMessageJson = await this.http.get(\"./assets/validation-message.json\").toPromise();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { CommonService} from \"./service/common.service\";\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent implements OnInit {\n  constructor(public commonService: CommonService) {\n\n  }\n\n  ngOnInit() {\n    this.commonService.loadSignUpJson();\n    this.commonService.getValidationErrorMesageJson();\n  }\n\n\n}\n","import { NgModule } from \"@angular/core\";\nimport {\n  MatButtonModule, MatIconModule, MatCheckboxModule, MatNativeDateModule, MatFormFieldModule, MatDatepickerModule,\n  MatOptionModule, MatSelectModule, MatInputModule, MatCardModule, MatToolbarModule, MatGridListModule,\n  MatProgressSpinnerModule, MatStepperModule\n} from \"@angular/material\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { BrowserModule } from \"@angular/platform-browser\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n     MatCheckboxModule,\n     MatInputModule,\n     MatFormFieldModule,\n     MatOptionModule,\n     MatSelectModule,\n     MatCardModule,\n     MatToolbarModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatStepperModule\n  ],\n  exports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n     MatCheckboxModule,\n     MatInputModule,\n     MatFormFieldModule,\n     MatOptionModule,\n     MatSelectModule,\n     MatCardModule,\n     MatToolbarModule,\n     MatGridListModule,\n     MatProgressSpinnerModule,\n     MatStepperModule\n  ]\n})\nexport class AngularMaterialModule { }\n","import { Injectable } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Validators } from \"@angular/forms\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class ValidationServiceService {\n\n  schema: any = this.http.get(`url: \"get ../../../assets/schema.json\"`);\n\n  constructor(private formBuilder: FormBuilder, private http: HttpClient) { }\n\n\n          getErrorMessage(control) {\n\n\n            let msg = \"\";\n\n            if (control.hasError(\"required\")) {\n              msg =  \"This Field is required\";\n            } else if (control.hasError(\"pattern\")) {\n              msg = \"This field contain only character value.\";\n            } else if (control.hasError(\"minlength\")) {\n              msg = \"This field require minimum \" + control.errors.minlength.requiredLength + \" characters\";\n            } else if (control.hasError(\"maxlength\")) {\n              msg = \"This field has maximum \" + control.errors.maxlength.requiredLength + \" characters\";\n            } else if (control.hasError(\"min\")) {\n              msg = \"This field required minimum value \" + control.errors.min.min;\n            } else if (control.hasError(\"max\")) {\n              msg = \"This field has maximum value \" + control.errors.max.max;\n            }\n            return msg;\n          }\n\n\n          enableUnit(field, myForm) {\n            if (myForm.get(field.name).value.in && (field.units.length > 1)) {\n              myForm.get(field.name).controls.unit.enable();\n\n            } else {\n                    if ( field.units.length > 1) {\n                   myForm.get(field.name).controls.unit.reset();\n                 }\n                    myForm.get(field.name).controls.unit.disable();\n            }\n          }\n\n          buildForm = () => {\n            const allControl = {};\n            let validators = [];\n            this.schema.forEach((element) => {\n\n                      //  Assign Validator to all form Control\n                      validators = [];\n\n                      if ( element.required) {\n                        validators.push(Validators.required);\n                      }\n                      if (element.dataType === \"String\") {\n                        validators.push(Validators.minLength(element.minLength));\n                        validators.push(Validators.maxLength(element.maxLength));\n                        validators.push(Validators.pattern(element.pattern));\n                      }\n                      if ((element.dataType === \"Number\" || element.dataType === \"Measure\")) {\n                        validators.push(Validators.max(element.max));\n                        validators.push(Validators.min(element.min));\n                      }\n                      if ( element.dataType === \"Measure\") {\n                        validators = [];\n                        let unitvalue = \"\";\n\n                        if ( element.units.length === 1) {\n                          unitvalue = element.units[0];\n\n                        }\n                        if ( element.required) {\n                             validators = [Validators.required, Validators.min(element.min), Validators.max(element.max)];\n                            }\n                        allControl[element.name] = this.formBuilder.group({\n                              in: [\"\", validators],\n                              unit: [{ value: unitvalue, disabled: true }, Validators.required]\n                            });\n\n                       } else {\n                        allControl[element.name] = [\"\", validators];\n                      }\n\n                    });\n\n            return this.formBuilder.group(allControl);\n          }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {  FormGroup } from \"@angular/forms\";\nimport {ValidationServiceService} from \"./validation-service.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-json-form\",\n  templateUrl: \"./json-form.component.html\",\n  styleUrls: [\"./json-form.component.css\"],\n})\n\nexport class JsonFormComponent implements OnInit {\n  title = \"JsonForm\";\n  formGroup: FormGroup;\n  schema: any;\n\n  constructor(private validationService: ValidationServiceService, private http: HttpClient) {\n    this.schema  = this.http.get(\"./assets/schema.json\").toPromise();\n  }\n\n  ngOnInit() {\n\n\n    this.formGroup = this.validationService.buildForm();\n\n      }\n\n      getEror(control) {\n        const controls = \"controls\";\n        if (!this.formGroup.get(control.name)[controls].unit.disabled) {\n          return this.validationService.getErrorMessage(this.formGroup.get(control.name)[controls].unit);\n\n        }\n      }\n\n      getError(control) {\n        if ( this.formGroup.get(control.name) instanceof FormGroup) {\n          const controls = \"controls\";\n          return this.validationService.getErrorMessage(this.formGroup.get(control.name)[controls].in);\n        }\n        return this.validationService.getErrorMessage(this.formGroup.get(control.name));\n      }\n\n      login = () => {\n        console.log(this.formGroup.value);\n      }\n\n      // To Reset all Form Control\n      reset = () => this.formGroup.reset();\n\n      // To enable/disable measure unit field\n      enable = (field) => {\n        this.validationService.enableUnit(field, this.formGroup);\n      }\n\n\n\n}\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from \"@angular/core\";\n\nimport _ from \"lodash\";\n\n@Component({\n  selector: \"app-form\",\n  templateUrl: \"./form.component.html\",\n  styleUrls: [\"./form.component.css\"]\n})\nexport class FormComponent implements OnInit, OnChanges {\n  @Input() modelSchema: any;\n  @Input() uiSchema: any;\n  modifiedUiSchema;\n\n  constructor() {  }\n\n  ngOnInit() {\n    this.initialize();\n    // console.log(this.formGroup);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const propName in changes) {\n      const chng = changes[propName];\n      const cur = JSON.stringify(chng.currentValue);\n      const prev = JSON.stringify(chng.previousValue);\n      if (cur !== prev) {\n        this.initialize();\n      }\n    }\n  }\n\n  initialize = () => {\n    const uiSchema: any = Object.assign({}, this.uiSchema);\n\n    if (uiSchema.type === \"Normal\") {\n      uiSchema.fields = this.formatFields(uiSchema);\n    } else {\n      _.each(uiSchema.steps, (step) => {\n        step.fields = this.formatFields(step);\n      });\n    }\n    this.modifiedUiSchema = uiSchema;\n    this.modifiedUiSchema.name = this.modelSchema.name;\n  }\n\n  formatFields = (schema: any) => {\n    return _.map(schema.fields, (field) => {\n      const matchedField = _.find(this.modelSchema.properties, {name: field.name});\n      if (matchedField) {\n        return {...field, ...matchedField};\n      }\n    });\n  }\n}\n","import {BaseValidators} from \"./base-validator\";\r\nimport {Validators} from \"@angular/forms\";\r\n\r\nexport class RequiredValidator implements BaseValidators {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  get = () => {\r\n    return Validators.required;\r\n  }\r\n}\r\n","import {BaseValidators} from \"./base-validator\";\r\nimport {Validators} from \"@angular/forms\";\r\n\r\nexport class MinLengthValidator implements BaseValidators {\r\n\r\n  constructor() {\r\n  }\r\n  get = (minLength) => {\r\n    return Validators.minLength(minLength);\r\n  }\r\n}\r\n","/**\r\n * Created by rgarg on 08-07-2019.\r\n */\r\nimport {BaseValidators} from \"./base-validator\";\r\nimport {Validators} from \"@angular/forms\";\r\n\r\nexport class MaxLengthValidator implements BaseValidators {\r\n\r\n  constructor() {\r\n  }\r\n  get = (maxLength) => {\r\n    return Validators.maxLength(maxLength);\r\n  }\r\n}\r\n","/**\r\n * Created by rgarg on 08-07-2019.\r\n */\r\nimport {Validators} from \"@angular/forms\";\r\nexport class PatternValidator {\r\n  constructor() {\r\n  }\r\n  get = (pattern) => {\r\n    return Validators.pattern(pattern);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {CommonService} from \"../../../service/common.service\";\n\ndeclare const Mustache: any;\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ValidationMessageGeneratorService {\n\n  validationMessage: any = this.commonService.errorMessageJson;\n\n  constructor(private http: HttpClient, private commonService: CommonService) {\n\n  }\n\n  errorMessage = (formGroup, property) => {\n\n    let msg = \"Field is Invalid\";\n    const control = formGroup.get(property.name);\n    const fieldError = this.validationMessage.fields[property.name] ? this.validationMessage.fields[property.name] : \"\";\n\n    if (control.hasError(\"required\")) {\n      if (fieldError.required) {\n        msg = fieldError.required;\n      } else {\n        msg = this.validationMessage.common.required;\n      }\n    } else if (control.hasError(\"pattern\") && property.name === \"mobileNo\") {\n      if (fieldError.mobile) {\n        msg = fieldError.mobile;\n      } else {\n        msg = this.validationMessage.common.mobile;\n      }\n    } else if (control.hasError(\"pattern\")) {\n      if (fieldError.pattern) {\n        msg = fieldError.pattern;\n      } else {\n        msg = this.validationMessage.common.pattern;\n      }\n    } else if (control.hasError(\"minlength\")) {\n      if (fieldError.minLength) {\n        msg = fieldError.minLength;\n      } else {\n        msg = this.validationMessage.common.minLength;\n      }\n    } else if (control.hasError(\"maxlength\")) {\n      if (fieldError.maxLength) {\n        msg = fieldError.maxLength;\n      } else {\n        msg = this.validationMessage.common.maxLength;\n      }\n    } else if (control.hasError(\"min\")) {\n      if (fieldError.min) {\n        msg = fieldError.min;\n      } else {\n        msg = this.validationMessage.common.min;\n      }\n    } else if (control.hasError(\"max\")) {\n      if (fieldError.max) {\n        msg = fieldError.max;\n      } else {\n        msg = this.validationMessage.common.max;\n      }\n    } else if (control.hasError(\"email\")) {\n      if (fieldError.email) {\n        msg = fieldError.email;\n      } else {\n        msg = this.validationMessage.common.email;\n      }\n    }\n\n    const {alias, min, max, minLength, maxLength, pattern} = property;\n\n    return Mustache.render(msg, {fieldName: alias, min, max, minLength, maxLength, pattern});\n  }\n\n}\n","import {Component, OnInit, Input, Output, EventEmitter, OnChanges} from \"@angular/core\";\nimport {RequiredValidator} from \"../../validators/required-validator\";\nimport {MinLengthValidator} from \"../../validators/min-length-validators\";\nimport {MaxLengthValidator} from \"../../validators/max-length-validator\";\nimport {PatternValidator} from \"../../validators/pattern-validator\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {ValidationMessageGeneratorService} from \"../../validators/validation-message-generator.service\";\n\n@Component({\n  selector: \"app-text-field\",\n  templateUrl: \"./text-field.component.html\",\n  styleUrls: [\"./text-field.component.css\"]\n})\nexport class TextFieldComponent implements OnInit, OnChanges {\n\n  formGroup: FormGroup;\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private validationMessageGenerator: ValidationMessageGeneratorService) {\n  }\n\n  ngOnInit() {\n    this.addValidator();\n  }\n\n  ngOnChanges() {\n    // if (this.formGroup) {\n    //   this.formGroup.updateValueAndValidity();\n    // }\n  }\n\n  addValidator = () => {\n\n    const validators = [];\n    if (this.property.required) {\n      validators.push(new RequiredValidator().get());\n    }\n    if (this.property.minLength && this.property.minLength != null) {\n      validators.push(new MinLengthValidator().get(this.property.minLength));\n    }\n    if (this.property.maxLength && this.property.maxLength != null) {\n      validators.push(new MaxLengthValidator().get(this.property.maxLength));\n    }\n    if (this.property.pattern && this.property.pattern != null) {\n      validators.push(new PatternValidator().get(this.property.pattern));\n    }\n\n    this.formGroup = this.formBuilder.group({\n      [this.property.name]: [{\n        value: \"\",\n        disabled: !this.property.enable\n      }, validators]\n    });\n    this.formGroup.updateValueAndValidity();\n    this.addControl.emit({key: this.property.name, value: this.formGroup});\n  }\n\n  getError = () => {\n    return this.validationMessageGenerator.errorMessage(this.formGroup, this.property);\n  }\n}\n","/**\r\n * Created by rgarg on 08-07-2019.\r\n */\r\nimport {Validators} from \"@angular/forms\";\r\nexport class MaxValueValidator {\r\n  constructor() {\r\n  }\r\n  get = (maxValue) => {\r\n    return Validators.max(maxValue);\r\n  }\r\n}\r\n","/**\r\n * Created by rgarg on 08-07-2019.\r\n */\r\n\r\nimport {Validators} from \"@angular/forms\";\r\n\r\nexport class MinValueValidator {\r\n  constructor() {\r\n  }\r\n  get = (minValue) => {\r\n    return Validators.min(minValue);\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {FormBuilder, FormGroup } from \"@angular/forms\";\nimport {RequiredValidator} from \"../../validators/required-validator\";\nimport {MaxValueValidator} from \"../../validators/max-value-validator\";\nimport {MinValueValidator} from \"../../validators/min-value-validator\";\nimport {PatternValidator} from \"../../validators/pattern-validator\";\nimport {ValidationMessageGeneratorService} from \"../../validators/validation-message-generator.service\";\n@Component({\n  selector: \"app-number-field\",\n  templateUrl: \"./number-field.component.html\",\n  styleUrls: [\"./number-field.component.css\"]\n})\nexport class NumberFieldComponent implements OnInit {\n  formGroup: FormGroup;\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private validationMessageGenerator: ValidationMessageGeneratorService) { }\n\n  ngOnInit() {\n    this.addValidator();\n  }\n\n  addValidator = () => {\n\n        const validators = [];\n        if (this.property.required) {\n          validators.push(new RequiredValidator().get());\n        }\n        if (this.property.max && this.property.max != null ) {\n          validators.push(new MaxValueValidator().get(this.property.max));\n        }\n        if (this.property.max && this.property.min != null ) {\n          validators.push(new MinValueValidator().get(this.property.min));\n        }\n        if (this.property.pattern && this.property.pattern != null) {\n          validators.push(new PatternValidator().get(this.property.pattern));\n        }\n        this.formGroup = this.formBuilder.group({ [this.property.name] : [{value: \"\" , disabled: !this.property.enable}, validators]});\n        this.formGroup.updateValueAndValidity();\n        this.addControl.emit({key: this.property.name , value: this.formGroup});\n\n  }\n  getError = () => {\n    return this.validationMessageGenerator.errorMessage(this.formGroup, this.property);\n  }\n\n  // fieldValueChanged = () => {\n  //   this.changeEvent.emit(this.formFieldControl.value);\n  // }\n\n}\n","import {Component, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\nimport {FormGroup, FormBuilder} from \"@angular/forms\";\nimport {RequiredValidator} from \"../../validators/required-validator\";\nimport set = Reflect.set;\nimport {ValidationMessageGeneratorService} from \"../../validators/validation-message-generator.service\";\n@Component({\n  selector: \"app-dropdown\",\n  templateUrl: \"./dropdown.component.html\",\n  styleUrls: [\"./dropdown.component.css\"]\n})\nexport class DropdownComponent implements OnInit {\n  formGroup: FormGroup;\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private validationMessageGenerator: ValidationMessageGeneratorService) {\n  }\n\n  ngOnInit() {\n    this.addValidator();\n  }\n\n  addValidator() {\n\n    const validators = [];\n    let dropDowninitialValue = \"\";\n    let dropwDownDisable = false;\n\n    if (this.property.required) {\n      validators.push(new RequiredValidator().get());\n    }\n\n    if (this.property.values && this.property.values.length === 1) {\n      // setUnitValue.setValue(this.property.values[0]);\n      dropDowninitialValue = this.property.values[0];\n      dropwDownDisable = true;\n    } else {\n      dropwDownDisable = !this.property.enable;\n    }\n\n\n    this.formGroup = this.formBuilder.group(\n      {[this.property.name]: [{value: dropDowninitialValue, disabled: dropwDownDisable}, validators]}\n    );\n    this.formGroup.updateValueAndValidity();\n    this.addControl.emit({key: this.property.name, value: this.formGroup});\n\n  }\n  getError = () => {\n    return this.validationMessageGenerator.errorMessage(this.formGroup, this.property);\n  }\n}\n","import {Component, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\nimport {FormGroup, FormControl, FormBuilder} from \"@angular/forms\";\n\n@Component({\n  selector: \"app-measure\",\n  templateUrl: \"./measure.component.html\",\n  styleUrls: [\"./measure.component.css\"]\n})\nexport class MeasureComponent implements OnInit {\n  formGroup: FormGroup = this.formBuilder.group({});\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  newProperty: any = {\n    measure: {}, unit: {}\n  };\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.newProperty.measure = {...this.property};\n    this.newProperty.measure.name += \"Measure\";\n    this.newProperty.unit = {...this.property};\n    this.newProperty.unit.name += \"Unit\";\n\n  }\n\n  onMeasureChange = (measureValue) => {\n    const control = this.formGroup.controls[this.newProperty.unit.name];\n    const values = \"values\";\n    if ( measureValue && this.property[values].length > 1 ) {\n      control.enable();\n    } else {\n      if (this.property[values].length > 1) {\n        control.reset();\n      }\n      control.disable();\n    }\n  }\n\n    addMeasureControl = (data) => {\n    this.formGroup.addControl(data.key, data.value);\n    this.formGroup.updateValueAndValidity();\n    this.addControl.emit({key: this.property.name , value: this.formGroup});\n\n  }\n\n\n}\n","import { Injectable } from \"@angular/core\";\nimport _ from \"lodash\";\nimport { HttpClient } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DashboardService {\n\n  UISchema: any; // it is initialized in auth service.\n\n  constructor(private http: HttpClient) { }\n  modelSchema: any;  // it is initialized in auth service.\n  // formSchema: any;\n  schemaUrl = \"assets/schema.json\";\n  schema = {\n    model: {\n      form: {},\n      editor: {}\n    },\n    ui: {\n      form: {},\n      editor: {}\n    }\n  }\n\n  enitityModelSchema = (name) => {\n    const schema = {...this.modelSchema};\n    const  entitySchema =  _.find(schema, (formSchema) => {\n      if (formSchema.name === name) {\n        return formSchema;\n      }\n    });\n    if ( entitySchema.steps && entitySchema.steps !== null) {\n      entitySchema.steps.forEach((step) => {\n        step.refs = [...entitySchema.refs];\n        step = this.mapsUnitToValue(step);\n      });\n    } else {\n      entitySchema.properties =  this.mapsUnitToValue(entitySchema);\n    }\n    const modelEditor = {...entitySchema};\n    this.schema.model.form = modelEditor;\n    this.schema.model.editor = _.clone(modelEditor);\n    return this.schema.model.editor;\n  }\n\n  mapsUnitToValue = (refEntitySchema) => {\n\n    refEntitySchema.properties = refEntitySchema.properties.map((property: any) => {\n      if (property.dataType === \"Ref\") {\n        refEntitySchema.refs.forEach(ref => {\n          if (property.ref === ref.name) {\n            Object.keys(ref).forEach((key) => (ref[key] == null) && delete ref[key]);\n            delete ref.name;\n            Object.assign(property, ref);\n          }\n        });\n        //  property.values = [...property.units];\n\n      }\n      if (property.dataType === \"Measure\" && property.units) {\n        property.values = [...property.units];\n        delete property.units;\n      }\n      return property;\n    });\n    return refEntitySchema.properties;\n  }\n\n\n  uiSchema = (type) => {\n    const uiEditor = _.find(this.UISchema, {type});\n    this.schema.ui.form = _.cloneDeep(uiEditor);\n    this.schema.ui.editor = _.cloneDeep(uiEditor);\n    return this.schema.ui.editor;\n  }\n\n\n  init = async () => {\n    return this.http.get(this.schemaUrl).toPromise();\n  }\n\n  initUiSchema = async () => {\n    return this.http.get(\"./assets/ui-schema.json\").toPromise();\n  }\n}\n","import {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {DashboardService} from \"./dashboard.service\";\nimport {JsonEditorComponent} from \"ang-jsoneditor\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"]\n})\nexport class DashboardComponent implements OnInit {\n\n  entity = [\n    {name: \"Aliquot\"}, {name: \"Case\"}, {name: \"Demographic\"},\n    {name: \"Diagnosis\"}, {name: \"Experiment\"}, {name: \"Instrument\"},\n    {name: \"InstrumentModel\"}, {name: \"Lab\"}, {name: \"Project\"},\n    {name: \"Protocol\"}, {name: \"Sample\"}\n  ];\n\n  formType = [\"Normal\", \"Group\"];\n  editorModelSchema: any;\n  formModelSchema: any;\n  editorUISchema: any;\n  formUISchema: any;\n  selected = \"Protocol\";\n  selectedType = \"Normal\";\n\n  @ViewChild(JsonEditorComponent, {static: false}) editor: JsonEditorComponent;\n\n\n  constructor(private dashboardService: DashboardService) {  }\n\n  ngOnInit() {\n    this.initialize();\n  }\n\n  initialize = () => {\n    this.editorModelSchema = this.dashboardService.enitityModelSchema(this.selected);\n    this.formModelSchema = this.dashboardService.schema.model.form;\n    this.editorUISchema = this.dashboardService.uiSchema(this.selectedType);\n    this.formUISchema = this.dashboardService.schema.ui.form;\n  }\n\n\n  reinitialize = () => {\n    this.initialize();\n  }\n\n  uiSchemaChange = (data) => {\n    this.formUISchema =  data;\n  }\n\n  modelSchemaChange = (data) => {\n    this.formModelSchema = data;\n  }\n\n  setUiSchema = (id) => {\n    this.editorUISchema = this.dashboardService.uiSchema(id);\n    this.formUISchema = this.dashboardService.schema.ui.form;\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {User} from \"./user\";\nimport {auth} from \"firebase/app\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {AngularFirestore} from \"@angular/fire/firestore\";\nimport {AngularFireDatabase} from \"@angular/fire/database\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class AuthService {\n  userData: any; // Save logged in user uiSchemaData\n\n  constructor(\n    public afd: AngularFireDatabase,\n    public afs: AngularFirestore,   // Inject Firestore service\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n    public router: Router\n  ) {\n    /* Saving user uiSchemaData in localstorage when\n     logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem(\"user\", JSON.stringify(this.userData));\n      } else {\n        localStorage.setItem(\"user\", null);\n        JSON.parse(localStorage.getItem(\"user\"));\n      }\n    });\n  }\n\n  // Sign in with email/password\n  SignIn(email, password) {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\n\n  }\n\n      // Sign up with email/password\n\n  SignUp = async (email, password) => {\n\n    try {\n      const  result = await this.afAuth.auth.createUserWithEmailAndPassword(email, password);\n      this.SetUserData(result.user);\n      return result;\n    } catch (error) {\n      return error;\n    }\n\n  }\n\n      // Send email verfificaiton when new user sign up\n      sendVerificationMail() {\n\n        return this.afAuth.auth.currentUser.sendEmailVerification()\n          .then(() => {\n          //  this.router.navigate([\"verify-email-address\"]);\n          });\n      }\n\n  // // Reset Forggot password\n  // ForgotPassword(passwordResetEmail) {\n  //   return this.afAuth.auth.sendPasswordResetEmail(passwordResetEmail)\n  //     .then(() => {\n  //       window.alert(\"Password reset email sent, check your inbox.\");\n  //     }).catch((error) => {\n  //       window.alert(error)\n  //     })\n  // }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    return (user !== null) ? true : false;\n  }\n// && user.emailVerified !== false\n\n\n  // Sign in with Google\n  GoogleAuth = async () => {\n        try {\n          const result = await this.afAuth.auth.signInWithPopup(new auth.GoogleAuthProvider());\n          this.SetUserData(result.user);\n        } catch (error) {\n          window.alert(error);\n        }\n  }\n\n  // Auth logic to run auth providers\n  AuthLogin(provider) {\n    return this.afAuth.auth.signInWithPopup(provider);\n  }\n\n\n\n\n  // /* Setting up user uiSchemaData when sign in with username/password,\n  //  sign up with username/password and sign in with social auth\n  //  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user) {\n\n    const userRef = this.afd.database.ref(`users/${user.uid}`);\n\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName === null ? \"\" : user.displayName,\n      photoURL: user.photoURL === null ? \"\" : user.photoURL,\n      emailVerified: user.emailVerified\n    };\n\n    const response = userRef.set(userData);\n\n    // console.log(response);\n    return response;\n  }\n   // const signUpRef  = this.afd.database.ref(\"signUp\");\n    // signUpRef.push(userInfo);\n\n    //\n    // console.log(db.ref(\"users/\" + user.uid).set({\n    //     firstName: user.firstName,\n    //     lastName: user.lastName,\n    //     email: user.email,\n    //\n    // }));\n\n\n  // Sign out\n  SignOut() {\n    return this.afAuth.auth.signOut().then(() => {\n      localStorage.removeItem(\"user\");\n      this.router.navigate([\"\"]);\n    });\n  }\n\n  // read Data from Firebase database\n  getUsers = () => {\n\n    const userRef = this.afd.database.ref(\"users/NoWPNhcWEXX5npSgSk3GdGxIdVw2\");\n\n    userRef.once(\"value\").then((snapshot) => {\n      const  username = snapshot.val() || \"Anonymous\";\n      // console.log(username);\n    });\n  }\n\n}\n\n\n\n","import { Injectable } from \"@angular/core\";\nimport {MatSnackBar, MatSnackBarConfig} from \"@angular/material\";\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SnackBarMessageService {\n\n  config: MatSnackBarConfig = { duration: 2000 };\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  show = (message, action?) => {\n    this.snackBar.open(message, action, this.config);\n  }\n}\n","import {Component, Inject, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {AuthService} from \"../services/auth.service\";\nimport {CommonService} from \"../../service/common.service\";\nimport {SnackBarMessageService} from \"../../service/snack-bar-message.service\";\nimport {HttpClient} from \"@angular/common/http\";\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"]\n})\nexport class SignupComponent implements OnInit {\n  formGroup: FormGroup = this.formBuilder.group({});\n  schema: any = this.commonService.signUpJson;\n\n  constructor(private router: Router, public dialogRef: MatDialogRef<SignupComponent>, @Inject(MAT_DIALOG_DATA)public data: any,\n              private formBuilder: FormBuilder, private http: HttpClient, public authService: AuthService,\n              private commonService: CommonService, private snackBarMessageService: SnackBarMessageService ) {\n  }\n\n  ngOnInit() {\n  }\n\n\n  signup = async () => {\n\n    this.commonService.showHideSpinner(true);\n    try {\n      await this.authService.SignUp(this.formGroup.controls[\"email\"].value[\"email\"], this.formGroup.controls[\"password\"].value[\"password\"]);\n     // this.authService.sendVerificationMail();\n      this.commonService.showHideSpinner(false);\n      this.router.navigate([\"dashboard\"]);\n      this.snackBarMessageService.show(\"User Registered Successfully\");\n      this.dialogRef.close();\n\n    } catch (error) {\n      if (error) {\n        console.log(error);\n        this.snackBarMessageService.show(error.message);\n      }\n      this.commonService.showHideSpinner(false);\n\n    }\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n\n  }\n  getError = (fieldName): string => {\n\n    if (this.formGroup.controls[fieldName].hasError(\"required\")) {\n      return \"You must enter a value\" ;\n    }\n    if (this.formGroup.controls[fieldName].hasError(\"pattern\") && fieldName === (\"password\" || \"confirmPassword\")) {\n      return \"This field contain only character value.\";\n    }\n    if (this.formGroup.controls[fieldName].hasError(\"pattern\")) {\n      return \"This field contain only character value.\";\n    }\n    if (this.formGroup.controls[fieldName].hasError(\"email\")) {\n      return \"Invalid Email !\";\n    }\n\n    return \"error\";\n  }\n\n  addControl = (data) => {\n    this.formGroup.addControl(data.key, data.value);\n    this.formGroup.updateValueAndValidity();\n  }\n\n}\n\n\n\n\n\n\n\n","import {Component, Inject, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { AuthService } from \"../services/auth.service\";\nimport {CommonService} from \"../../service/common.service\";\nimport {SnackBarMessageService} from \"../../service/snack-bar-message.service\";\nimport {SignupComponent} from \"../signup/signup.component\";\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  formGroup: FormGroup;\n\n  constructor(private router: Router, public dialogRef: MatDialogRef<LoginComponent>, @Inject(MAT_DIALOG_DATA)public data: any,\n              private formBuilder: FormBuilder, public authService: AuthService, private commonService: CommonService,\n              private snackBarMessageService: SnackBarMessageService, private dialog: MatDialog ) {\n  }\n\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      email: [\"r@gmail.com\", [Validators.required, Validators.email]],\n      password: [\"rishi1997\", [Validators.required]]\n\n    });\n\n    this.authService.getUsers();\n  }\n  login = async (mode) => {\n    this.commonService.showHideSpinner(true);\n\n    try {\n      if (mode === \"google\") {\n        this.commonService.showHideSpinner(false);\n        await this.authService.GoogleAuth();\n      } else {\n        await this.authService.SignIn(this.formGroup.controls[\"email\"].value, this.formGroup.controls[\"password\"].value);\n        this.commonService.showHideSpinner(false);\n      }\n      this.snackBarMessageService.show(\"LogIn Successfull\");\n      this.router.navigate([\"dashboard\"]);\n\n      this.dialogRef.close();\n\n    } catch (error) {\n      if (error) {\n         if ( error.code === \"auth/user-not-found\") {\n           this.openSignupDialog();\n         } else {\n           this.snackBarMessageService.show(error.message);\n         }\n      }\n      this.commonService.showHideSpinner(false);\n\n    }\n\n  }\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n  getError = (fieldName): string => {\n\n    if (this.formGroup.controls[fieldName].hasError(\"required\")) {\n      return fieldName + \" is required. \";\n    }\n    if (this.formGroup.controls[fieldName].hasError(\"email\")) {\n      return \"Invalid Email !\";\n    }\n\n    return \"error\";\n  }\n  openSignupDialog = (): void => {\n    this.dialog.closeAll();\n    const dialogRef = this.dialog.open(SignupComponent);\n\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n\n  }\n\n}\n\n\n\n","import { Injectable } from \"@angular/core\";\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport {AuthService} from \"../entryComponent/services/auth.service\";\nimport {MatDialog} from \"@angular/material\";\nimport {LoginComponent} from \"../entryComponent/login/login.component\";\nimport {DashboardService} from \"../dashboard/dashboard.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class AuthenticationGuard implements CanActivate  {\n\n  constructor(private authService: AuthService, private router: Router, private dialog: MatDialog,\n              private dashboardService: DashboardService) {\n\n  }\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    if (!this.authService.isLoggedIn) {\n      const dialogRef = this.dialog.open(LoginComponent);\n\n      dialogRef.afterClosed().subscribe(result => {\n      });\n      return false;\n    }\n\n    return this.init();\n  }\n\n  init = async () => {\n    this.dashboardService.modelSchema = await this.dashboardService.init();\n    this.dashboardService.UISchema = await this.dashboardService.initUiSchema();\n    return true;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\nimport {AuthenticationGuard} from \"./guard/authentication.guard\";\n\n\nconst routes: Routes = [\n  { path: \"dashboard\", component: DashboardComponent, canActivate: [AuthenticationGuard] }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes)],\n  exports: [ RouterModule ]\n})\n\n\nexport class AppRoutingModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport {MatDialog} from \"@angular/material\";\nimport {LoginComponent} from \"../../entryComponent/login/login.component\";\nimport {SignupComponent} from \"../../entryComponent/signup/signup.component\";\nimport {AuthService} from \"../../entryComponent/services/auth.service\";\n\n\n@Component({\n  selector: \"app-tool-bar\",\n  templateUrl: \"./tool-bar.component.html\",\n  styleUrls: [\"./tool-bar.component.css\"]\n})\nexport class ToolBarComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, public authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  openLoginDialog = (): void  => {\n    const dialogRef = this.dialog.open(LoginComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n\n  }\n\n  openSignupDialog = (): void => {\n    const dialogRef = this.dialog.open(SignupComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {RequiredValidator} from \"../../validators/required-validator\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ValidationMessageGeneratorService} from \"../../validators/validation-message-generator.service\";\n\n@Component({\n  selector: \"app-email-field\",\n  templateUrl: \"./email-field.component.html\",\n  styleUrls: [\"./email-field.component.css\"]\n})\nexport class EmailFieldComponent implements OnInit {\n  formGroup: FormGroup;\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private validationMessageGenerator: ValidationMessageGeneratorService) {\n  }\n\n  ngOnInit() {\n    this.addValidator();\n  }\n\n  addValidator = () => {\n\n    const validators = [];\n    if (this.property.required) {\n      validators.push(new RequiredValidator().get());\n    }\n    validators.push(Validators.email);\n\n    this.formGroup = this.formBuilder.group({\n      [this.property.name]: [{\n        value: \"\",\n        disabled: !this.property.enable\n      }, validators]\n    });\n    this.formGroup.updateValueAndValidity();\n    this.addControl.emit({key: this.property.name, value: this.formGroup});\n  }\n  getError = () => {\n    return this.validationMessageGenerator.errorMessage(this.formGroup, this.property);\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {RequiredValidator} from \"../../validators/required-validator\";\nimport {MaxLengthValidator} from \"../../validators/max-length-validator\";\nimport {PatternValidator} from \"../../validators/pattern-validator\";\nimport {MinLengthValidator} from \"../../validators/min-length-validators\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {ValidationMessageGeneratorService} from \"../../validators/validation-message-generator.service\";\n\n@Component({\n  selector: \"app-password-field\",\n  templateUrl: \"./password-field.component.html\",\n  styleUrls: [\"./password-field.component.css\"]\n})\nexport class PasswordFieldComponent implements OnInit {\n\n  formGroup: FormGroup;\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private validationMessageGenerator: ValidationMessageGeneratorService) { }\n\n  ngOnInit() {\n    this.addValidator();\n  }\n\n  addValidator = () => {\n    // validators.push(new RequiredValidator());\n\n    const validators = [];\n    if (this.property.required) {\n      validators.push(new RequiredValidator().get());\n    }\n    if (this.property.minLength && this.property.minLength != null ) {\n      validators.push(new MinLengthValidator().get(this.property.minLength));\n    }\n    if (this.property.maxLength && this.property.maxLength != null ) {\n      validators.push(new MaxLengthValidator().get(this.property.maxLength));\n    }\n    if (this.property.pattern && this.property.pattern != null) {\n      validators.push(new PatternValidator().get(this.property.pattern));\n    }\n\n    this.formGroup = this.formBuilder.group({ [this.property.name] : [{value: \"\" , disabled: !this.property.enable}, validators] });\n    this.formGroup.updateValueAndValidity();\n    this.addControl.emit({key: this.property.name , value: this.formGroup});\n  }\n  getError = () => {\n    return this.validationMessageGenerator.errorMessage(this.formGroup, this.property);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment: any = {\r\n  production: false,\r\n  firebaseConfig : {\r\n    apiKey: \"AIzaSyAhthWRtzWHuG_C6xyKhNU3wPD_Ck9PS34\",\r\n    authDomain: \"form-35b09.firebaseapp.com\",\r\n    databaseURL: \"https://form-35b09.firebaseio.com\",\r\n    projectId: \"form-35b09\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"368882932305\",\r\n    appId: \"1:368882932305:web:891e308aaacd6c73\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-loading-spinner\",\n  templateUrl: \"./loading-spinner.component.html\",\n  styleUrls: [\"./loading-spinner.component.css\"]\n})\nexport class LoadingSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, OnInit, Input, OnChanges} from \"@angular/core\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport _ from \"lodash\";\n\n@Component({\n  selector: \"app-step-form\",\n  templateUrl: \"./step-form.component.html\",\n  styleUrls: [\"./step-form.component.css\"]\n})\nexport class StepFormComponent implements OnInit, OnChanges {\n  formGroup: FormGroup = this.formBuilder.group({});\n  @Input() uiSchema: any;\n\n  constructor(private formBuilder: FormBuilder) {\n  }\n  ngOnInit() {\n    const allSteps = [];\n    const steps = _.range(this.uiSchema.totalSteps);\n    steps.forEach((step) => {\n      allSteps[step] = this.formBuilder.group({});\n    });\n    this.formGroup = this.formBuilder.group(allSteps);\n  }\n\n  ngOnChanges() {\n    this.formGroup = this.formBuilder.group({});  // when ui or model formSchema changes re initialize form group\n  }\n\n  addControl = (data) => {\n    _.each(this.uiSchema.steps, (step) => {\n      const matchedField = _.find(step.fields, (field) => {\n        return field.name === data.key;\n      });\n      if (matchedField) {\n        const fc: any = this.formGroup.controls[step.sequence - 1];\n        fc.addControl(data.key, data.value);\n        this.formGroup.updateValueAndValidity();\n      }\n    });\n  }\n\n  formValue = () => {\n    console.log(this.formGroup.getRawValue());\n  }\n\n  reset = () => {\n    this.formGroup.reset();\n  }\n}\n","import {AfterViewInit, Component, Input, OnChanges, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: \"app-simple\",\n  templateUrl: \"./simple.component.html\",\n  styleUrls: [\"./simple.component.css\"]\n})\nexport class SimpleComponent implements OnInit, OnChanges {\n  formGroup: FormGroup = this.formBuilder.group({});\n  @Input() uiSchema;\n\n  constructor(private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.formGroup = this.formBuilder.group({}); // when ui or model formSchema changes re initialize form group\n  }\n\n  addControl = (data) => {\n    this.formGroup.addControl(data.key, data.value);\n    this.formGroup.updateValueAndValidity();\n  }\n  getFormValue = () => {\n    console.log(this.formGroup.getRawValue());\n  }\n\n  reset = () => {\n    console.log(this.formGroup);\n    this.formGroup.reset();\n  }\n\n}\n","import {Component, Input, OnChanges, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport _ from \"lodash\";\n\n@Component({\n  selector: \"app-accordian\",\n  templateUrl: \"./accordian.component.html\",\n  styleUrls: [\"./accordian.component.css\"]\n})\nexport class AccordianComponent implements OnInit, OnChanges {\n  formGroup: FormGroup = this.formBuilder.group({});\n  step = 0;\n  @Input() uiSchema: any;\n\n  constructor(private formBuilder: FormBuilder) {\n  }\n  ngOnInit() {\n    console.log(\"UI Schema\", this.uiSchema);\n    const allSteps = [];\n    const steps = _.range(this.uiSchema.totalSteps);\n    steps.forEach((step) => {\n      allSteps[step] = this.formBuilder.group({});\n    });\n    this.formGroup = this.formBuilder.group(allSteps);\n  }\n  ngOnChanges() {\n    this.formGroup = this.formBuilder.group({});  // when ui or model formSchema changes re initialize form group\n  }\n\n\n  addControl = (data) => {\n    _.each(this.uiSchema.steps, (step) => {\n      const matchedField = _.find(step.fields, (field) => {\n        return field.name === data.key;\n      });\n      if (matchedField) {\n        const fc: any = this.formGroup.controls[step.sequence - 1];\n        fc.addControl(data.key, data.value);\n        this.formGroup.updateValueAndValidity();\n      }\n    });\n  }\n\n  formValue = () => {\n    console.log(this.formGroup.getRawValue());\n  }\n\n  reset = () => {\n    this.formGroup.reset();\n  }\n\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n}\n","import {Component, Input, OnChanges, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport _ from \"lodash\";\n\n@Component({\n  selector: \"app-tab\",\n  templateUrl: \"./tab.component.html\",\n  styleUrls: [\"./tab.component.css\"]\n})\nexport class TabComponent implements OnInit, OnChanges {\n  formGroup: FormGroup = this.formBuilder.group({});\n  @Input() uiSchema: any;\n\n  constructor(private formBuilder: FormBuilder) {\n  }\n  ngOnInit() {\n    this.buildStepFormGroup();\n  }\n\n  ngOnChanges() {\n    this.buildStepFormGroup();\n  }\n\n  buildStepFormGroup = () => {\n    const allSteps = [];\n    const steps = _.range(this.uiSchema.totalSteps);\n    steps.forEach((step) => {\n      allSteps[step] = this.formBuilder.group({});\n    });\n    this.formGroup = this.formBuilder.group(allSteps);\n  }\n\n\n  addControl = (data) => {\n    _.each(this.uiSchema.steps, (step) => {\n      const matchedField = _.find(step.fields, (field) => {\n        return field.name === data.key;\n      });\n      if (matchedField) {\n        const fc: any = this.formGroup.controls[step.sequence - 1];\n        fc.addControl(data.key, data.value);\n        this.formGroup.updateValueAndValidity();\n      }\n    });\n  }\n\n  formValue = () => {\n    console.log(this.formGroup.getRawValue());\n  }\n\n  reset = () => {\n    this.formGroup.reset();\n  }\n\n\n\n}\n","import {Component, DoCheck, EventEmitter, HostListener, Input, OnInit, Output, ViewChild} from \"@angular/core\";\nimport { JsonEditorComponent, JsonEditorOptions } from \"ang-jsoneditor\";\n\n@Component({\n  selector: \"app-ui-schema\",\n  templateUrl: \"./ui-schema.component.html\",\n  styleUrls: [\"./ui-schema.component.css\"]\n})\nexport class UiSchemaComponent implements OnInit {\n  @ViewChild(JsonEditorComponent, {static: false}) editor: JsonEditorComponent;\n\n  @Input() uiSchemaData: any;\n  @Output() public uiSchemaChange = new EventEmitter();\n\n  public uiSchemaEditorOptions: JsonEditorOptions;\n\n  constructor() {\n    this.uiSchemaEditorOptions = new JsonEditorOptions();\n    this.uiSchemaEditorOptions.mode = \"code\";\n  }\n\n\n  ngOnInit() {\n    console.log(\"Old UI Schema\", this.uiSchemaData);\n  }\n\n  getData(event) {\n    if (this.editor.isValidJson()) {\n      this.uiSchemaChange.emit(this.editor.get());\n    } else {\n      console.log(\"UI Schema is incorrect\");\n    }\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from \"@angular/core\";\nimport {JsonEditorComponent, JsonEditorOptions} from \"ang-jsoneditor\";\n\n@Component({\n  selector: \"app-model-schema\",\n  templateUrl: \"./model-schema.component.html\",\n  styleUrls: [\"./model-schema.component.css\"]\n})\nexport class ModelSchemaComponent implements OnInit {\n  @ViewChild(JsonEditorComponent, {static: false}) editor: JsonEditorComponent;\n\n  @Input() modelSchemaData: any;\n  @Output() public modelSchemaChange = new EventEmitter();\n\n  public modelSchemaEditorOptions: JsonEditorOptions;\n\n  constructor() {\n    this.modelSchemaEditorOptions = new JsonEditorOptions();\n    this.modelSchemaEditorOptions.mode = \"code\";\n  }\n\n\n  ngOnInit() {\n    console.log(\"Old model Schema\", this.modelSchemaData);\n  }\n\n  getData(event) {\n    if (this.editor.isValidJson()) {\n      this.modelSchemaChange.emit(this.editor.get());\n      console.log(\"correct\");\n    } else {\n      // console.log(\"UI Schema is incorrect\");\n    }\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-radio\",\n  templateUrl: \"./radio.component.html\",\n  styleUrls: [\"./radio.component.css\"]\n})\nexport class RadioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from \"@angular/core\";\n\nimport {AppComponent} from \"./app.component\";\nimport {AngularMaterialModule} from \"./Modules/angular-material.module\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {JsonFormComponent} from \"./component/json-form/json-form.component\";\nimport {ValidationServiceService} from \"./component/json-form/validation-service.service\";\nimport {FormComponent} from \"./component/ex-form/form.component\";\nimport {TextFieldComponent} from \"./component/ex-form/form-field/text/text-field.component\";\nimport {NumberFieldComponent} from \"./component/ex-form/form-field/number/number-field.component\";\nimport {DropdownComponent} from \"./component/ex-form/form-field/dropdown/dropdown.component\";\nimport {MeasureComponent} from \"./component/ex-form/form-field/measure/measure.component\";\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {LoginComponent} from \"./entryComponent/login/login.component\";\nimport {ToolBarComponent} from \"./header/tool-bar/tool-bar.component\";\nimport {MatDialogModule} from \"@angular/material\";\nimport {SignupComponent} from \"./entryComponent/signup/signup.component\";\nimport {EmailFieldComponent} from \"./component/ex-form/form-field/email/email-field.component\";\nimport {PasswordFieldComponent} from \"./component/ex-form/form-field/password/password-field.component\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\n\nimport {SocialLoginModule, AuthServiceConfig, FacebookLoginProvider} from \"angularx-social-login\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {NgJsonEditorModule} from \"ang-jsoneditor\";\n\n\n// firebase\nimport {AngularFireModule} from \"@angular/fire\";\nimport {environment} from \"../environments/environment\";\nimport {AngularFireAuthModule} from \"@angular/fire/auth\";\nimport {AngularFirestoreModule} from \"@angular/fire/firestore\";\nimport {AngularFireDatabaseModule} from \"@angular/fire/database\";\n\n\nimport {AuthService} from \"./entryComponent/services/auth.service\";\nimport {LoadingSpinnerComponent} from \"./loading-spinner/loading-spinner.component\";\nimport {CommonService} from \"./service/common.service\";\nimport {StepFormComponent} from \"./component/ex-form/viewer/group/step-wizard/step-form.component\";\nimport {SimpleComponent} from \"./component/ex-form/viewer/basic/simple/simple.component\";\nimport {AccordianComponent} from \"./component/ex-form/viewer/group/accordian/accordian.component\";\nimport {TabComponent} from \"./component/ex-form/viewer/group/tabs/tab/tab.component\";\nimport {UiSchemaComponent} from \"./json-editor/ui-schema/ui-schema.component\";\nimport {ModelSchemaComponent} from \"./json-editor/model-schema/model-schema.component\";\nimport { RadioComponent } from \"./component/ex-form/form-field/radio/radio.component\";\nimport {ValidationMessageGeneratorService} from \"./component/ex-form/validators/validation-message-generator.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JsonFormComponent,\n    FormComponent,\n    TextFieldComponent,\n    NumberFieldComponent,\n    DropdownComponent,\n    MeasureComponent,\n    DashboardComponent,\n    LoginComponent,\n    ToolBarComponent,\n    SignupComponent,\n    EmailFieldComponent,\n    PasswordFieldComponent,\n    LoadingSpinnerComponent,\n    StepFormComponent,\n    SimpleComponent,\n    AccordianComponent,\n    TabComponent,\n    UiSchemaComponent,\n    ModelSchemaComponent,\n    RadioComponent\n  ],\n  imports: [\n    FormsModule,\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    CommonModule,\n    AppRoutingModule,\n    MatDialogModule,\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireModule, // Only required for auth features,\n    AngularFirestoreModule,\n    MatSnackBarModule,\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n    MatExpansionModule,\n    MatTabsModule,\n    SocialLoginModule,\n    HttpClientModule,\n    NgJsonEditorModule\n\n  ],\n  entryComponents: [\n    LoginComponent, SignupComponent\n  ],\n\n  providers: [ValidationServiceService,\n    ValidationMessageGeneratorService,\n    AuthService,\n    CommonService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {AngularMaterialModule as Éµbb} from './app/Modules/angular-material.module';\nexport {AppRoutingModule as Éµbc} from './app/app-routing.module';\nexport {AppComponent as Éµa} from './app/app.component';\nexport {DropdownComponent as Éµi} from './app/component/ex-form/form-field/dropdown/dropdown.component';\nexport {EmailFieldComponent as Éµr} from './app/component/ex-form/form-field/email/email-field.component';\nexport {MeasureComponent as Éµj} from './app/component/ex-form/form-field/measure/measure.component';\nexport {NumberFieldComponent as Éµh} from './app/component/ex-form/form-field/number/number-field.component';\nexport {PasswordFieldComponent as Éµs} from './app/component/ex-form/form-field/password/password-field.component';\nexport {RadioComponent as Éµba} from './app/component/ex-form/form-field/radio/radio.component';\nexport {TextFieldComponent as Éµf} from './app/component/ex-form/form-field/text/text-field.component';\nexport {FormComponent as Éµe} from './app/component/ex-form/form.component';\nexport {ValidationMessageGeneratorService as Éµg} from './app/component/ex-form/validators/validation-message-generator.service';\nexport {SimpleComponent as Éµv} from './app/component/ex-form/viewer/basic/simple/simple.component';\nexport {AccordianComponent as Éµw} from './app/component/ex-form/viewer/group/accordian/accordian.component';\nexport {StepFormComponent as Éµu} from './app/component/ex-form/viewer/group/step-wizard/step-form.component';\nexport {TabComponent as Éµx} from './app/component/ex-form/viewer/group/tabs/tab/tab.component';\nexport {JsonFormComponent as Éµc} from './app/component/json-form/json-form.component';\nexport {ValidationServiceService as Éµd} from './app/component/json-form/validation-service.service';\nexport {DashboardComponent as Éµk} from './app/dashboard/dashboard.component';\nexport {DashboardService as Éµl} from './app/dashboard/dashboard.service';\nexport {LoginComponent as Éµm} from './app/entryComponent/login/login.component';\nexport {AuthService as Éµn} from './app/entryComponent/services/auth.service';\nexport {SignupComponent as Éµq} from './app/entryComponent/signup/signup.component';\nexport {AuthenticationGuard as Éµbd} from './app/guard/authentication.guard';\nexport {ToolBarComponent as Éµp} from './app/header/tool-bar/tool-bar.component';\nexport {ModelSchemaComponent as Éµz} from './app/json-editor/model-schema/model-schema.component';\nexport {UiSchemaComponent as Éµy} from './app/json-editor/ui-schema/ui-schema.component';\nexport {LoadingSpinnerComponent as Éµt} from './app/loading-spinner/loading-spinner.component';\nexport {CommonService as Éµb} from './app/service/common.service';\nexport {SnackBarMessageService as Éµo} from './app/service/snack-bar-message.service';\nexport {environment as Éµbe} from './environments/environment';"],"names":["tslib_1.__decorate","MatSnackBar","tslib_1.__param"],"mappings":"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"}