{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://angular-json-form/app/service/common.service.ts","ng://angular-json-form/app/app.component.ts","ng://angular-json-form/app/Modules/angular-material.module.ts","ng://angular-json-form/app/component/json-form/validation-service.service.ts","ng://angular-json-form/app/component/json-form/json-form.component.ts","ng://angular-json-form/app/component/ex-form/form.component.ts","ng://angular-json-form/app/component/ex-form/validators/required-validator.ts","ng://angular-json-form/app/component/ex-form/validators/min-length-validators.ts","ng://angular-json-form/app/component/ex-form/validators/max-length-validator.ts","ng://angular-json-form/app/component/ex-form/validators/pattern-validator.ts","ng://angular-json-form/app/component/ex-form/validators/validation-message-generator.service.ts","ng://angular-json-form/app/component/ex-form/form-field/text/text-field.component.ts","ng://angular-json-form/app/component/ex-form/validators/max-value-validator.ts","ng://angular-json-form/app/component/ex-form/validators/min-value-validator.ts","ng://angular-json-form/app/component/ex-form/form-field/number/number-field.component.ts","ng://angular-json-form/app/component/ex-form/form-field/dropdown/dropdown.component.ts","ng://angular-json-form/app/component/ex-form/form-field/measure/measure.component.ts","ng://angular-json-form/app/dashboard/dashboard.service.ts","ng://angular-json-form/app/dashboard/dashboard.component.ts","ng://angular-json-form/app/entryComponent/services/auth.service.ts","ng://angular-json-form/app/service/snack-bar-message.service.ts","ng://angular-json-form/app/entryComponent/signup/signup.component.ts","ng://angular-json-form/app/entryComponent/login/login.component.ts","ng://angular-json-form/app/guard/authentication.guard.ts","ng://angular-json-form/app/app-routing.module.ts","ng://angular-json-form/app/header/tool-bar/tool-bar.component.ts","ng://angular-json-form/app/component/ex-form/form-field/email/email-field.component.ts","ng://angular-json-form/app/component/ex-form/form-field/password/password-field.component.ts","ng://angular-json-form/environments/environment.ts","ng://angular-json-form/app/loading-spinner/loading-spinner.component.ts","ng://angular-json-form/app/component/ex-form/viewer/group/step-wizard/step-form.component.ts","ng://angular-json-form/app/component/ex-form/viewer/basic/simple/simple.component.ts","ng://angular-json-form/app/component/ex-form/viewer/group/accordian/accordian.component.ts","ng://angular-json-form/app/component/ex-form/viewer/group/tabs/tab/tab.component.ts","ng://angular-json-form/app/json-editor/ui-schema/ui-schema.component.ts","ng://angular-json-form/app/json-editor/model-schema/model-schema.component.ts","ng://angular-json-form/app/component/ex-form/form-field/radio/radio.component.ts","ng://angular-json-form/app/app.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","ar","error","__spread","concat","CommonService","http","_this","showHideSpinner","show","jQuery","modal","backdrop","keyboard","setTimeout","loadSignUpJson","_a","get","toPromise","signUpJson","_b","getValidationErrorMesageJson","errorMessageJson","Injectable","providedIn","HttpClient","AppComponent","commonService","ngOnInit","Component","selector","template","AngularMaterialModule","NgModule","declarations","imports","BrowserModule","BrowserAnimationsModule","MatIconModule","MatButtonModule","MatNativeDateModule","MatDatepickerModule","MatCheckboxModule","MatInputModule","MatFormFieldModule","MatOptionModule","MatSelectModule","MatCardModule","MatToolbarModule","MatProgressSpinnerModule","MatGridListModule","MatStepperModule","exports","ValidationServiceService","formBuilder","schema","buildForm","allControl","validators","forEach","element","required","Validators","dataType","minLength","maxLength","pattern","max","min","unitvalue","units","name","group","in","unit","disabled","getErrorMessage","control","msg","hasError","errors","minlength","requiredLength","maxlength","enableUnit","field","myForm","controls","enable","reset","disable","FormBuilder","JsonFormComponent","validationService","title","login","console","log","formGroup","getEror","getError","FormGroup","FormComponent","initialize","uiSchema","type","fields","formatFields","each","steps","modifiedUiSchema","modelSchema","map","matchedField","find","properties","ngOnChanges","changes","propName","chng","JSON","stringify","currentValue","previousValue","tslib_1.__decorate","Input","RequiredValidator","MinLengthValidator","MaxLengthValidator","PatternValidator","ValidationMessageGeneratorService","validationMessage","errorMessage","property","fieldError","common","mobile","email","alias","Mustache","render","fieldName","TextFieldComponent","validationMessageGenerator","addControl","EventEmitter","addValidator","updateValueAndValidity","emit","Output","MaxValueValidator","maxValue","MinValueValidator","minValue","NumberFieldComponent","DropdownComponent","dropDowninitialValue","dropwDownDisable","values","MeasureComponent","newProperty","measure","onMeasureChange","measureValue","addMeasureControl","data","DashboardService","UISchema","schemaUrl","model","form","editor","ui","enitityModelSchema","entitySchema","formSchema","refs","mapsUnitToValue","modelEditor","clone","refEntitySchema","ref","keys","uiEditor","cloneDeep","init","DashboardComponent","dashboardService","entity","formType","selected","selectedType","editorModelSchema","formModelSchema","editorUISchema","formUISchema","reinitialize","uiSchemaChange","modelSchemaChange","setUiSchema","id","ViewChild","JsonEditorComponent","static","AuthService","afd","afs","afAuth","router","SignUp","password","auth","createUserWithEmailAndPassword","SetUserData","user","GoogleAuth","signInWithPopup","GoogleAuthProvider","window","alert","error_2","getUsers","database","once","snapshot","val","authState","subscribe","userData","localStorage","setItem","parse","getItem","SignIn","signInWithEmailAndPassword","sendVerificationMail","currentUser","sendEmailVerification","AuthLogin","provider","userRef","uid","displayName","photoURL","emailVerified","set","SignOut","signOut","removeItem","navigate","AngularFireDatabase","AngularFirestore","AngularFireAuth","Router","SnackBarMessageService","snackBar","config","duration","message","action","open","MatSnackBar","SignupComponent","dialogRef","authService","snackBarMessageService","signup","close","error_1","cancel","tslib_1.__param","Inject","MAT_DIALOG_DATA","MatDialogRef","LoginComponent","dialog","mode","code","openSignupDialog","closeAll","afterClosed","MatDialog","AuthenticationGuard","canActivate","state","isLoggedIn","routes","path","component","AppRoutingModule","RouterModule","forRoot","ToolBarComponent","openLoginDialog","EmailFieldComponent","PasswordFieldComponent","environment","production","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LoadingSpinnerComponent","StepFormComponent","sequence","formValue","getRawValue","allSteps","range","totalSteps","SimpleComponent","getFormValue","AccordianComponent","setStep","index","nextStep","prevStep","TabComponent","buildStepFormGroup","UiSchemaComponent","uiSchemaEditorOptions","JsonEditorOptions","uiSchemaData","getData","event","isValidJson","ModelSchemaComponent","modelSchemaEditorOptions","modelSchemaData","RadioComponent","AppModule","FormsModule","ReactiveFormsModule","CommonModule","MatDialogModule","AngularFireModule","initializeApp","AngularFirestoreModule","MatSnackBarModule","AngularFireDatabaseModule","AngularFireAuthModule","MatExpansionModule","MatTabsModule","SocialLoginModule","HttpClientModule","NgJsonEditorModule","entryComponents","providers","bootstrap"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\ndeclare const jQuery: any;\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class CommonService {\n\n  signUpJson: any;\n  errorMessageJson: any;\n\n  constructor(private http: HttpClient) { }\n\n  showHideSpinner = (show) => {\n    // this.isSpinnerVisible = show;\n    if (show) {\n      jQuery(\"#loaderModal\")\n        .modal({backdrop: \"static\", keyboard: false})\n        .modal(\"show\");\n    } else {\n      setTimeout(() => {\n        jQuery(\"#loaderModal\").modal(\"hide\");\n      }, 1000);\n    }\n  }\n\n  loadSignUpJson = async () => {\n    this.signUpJson = await this.http.get(\"./assets/signup.json\").toPromise();\n  }\n\n  getValidationErrorMesageJson = async () => {\n    this.errorMessageJson = await this.http.get(\"./assets/validation-message.json\").toPromise();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { CommonService} from \"./service/common.service\";\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent implements OnInit {\n  constructor(public commonService: CommonService) {\n\n  }\n\n  ngOnInit() {\n    this.commonService.loadSignUpJson();\n    this.commonService.getValidationErrorMesageJson();\n  }\n\n\n}\n","import { NgModule } from \"@angular/core\";\nimport {\n  MatButtonModule, MatIconModule, MatCheckboxModule, MatNativeDateModule, MatFormFieldModule, MatDatepickerModule,\n  MatOptionModule, MatSelectModule, MatInputModule, MatCardModule, MatToolbarModule, MatGridListModule,\n  MatProgressSpinnerModule, MatStepperModule\n} from \"@angular/material\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { BrowserModule } from \"@angular/platform-browser\";\n\n@NgModule({\n  declarations: [],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n     MatCheckboxModule,\n     MatInputModule,\n     MatFormFieldModule,\n     MatOptionModule,\n     MatSelectModule,\n     MatCardModule,\n     MatToolbarModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatStepperModule\n  ],\n  exports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n     MatCheckboxModule,\n     MatInputModule,\n     MatFormFieldModule,\n     MatOptionModule,\n     MatSelectModule,\n     MatCardModule,\n     MatToolbarModule,\n     MatGridListModule,\n     MatProgressSpinnerModule,\n     MatStepperModule\n  ]\n})\nexport class AngularMaterialModule { }\n","import { Injectable } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { Validators } from \"@angular/forms\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class ValidationServiceService {\n\n  schema: any = this.http.get(`url: \"get ../../../assets/schema.json\"`);\n\n  constructor(private formBuilder: FormBuilder, private http: HttpClient) { }\n\n\n          getErrorMessage(control) {\n\n\n            let msg = \"\";\n\n            if (control.hasError(\"required\")) {\n              msg =  \"This Field is required\";\n            } else if (control.hasError(\"pattern\")) {\n              msg = \"This field contain only character value.\";\n            } else if (control.hasError(\"minlength\")) {\n              msg = \"This field require minimum \" + control.errors.minlength.requiredLength + \" characters\";\n            } else if (control.hasError(\"maxlength\")) {\n              msg = \"This field has maximum \" + control.errors.maxlength.requiredLength + \" characters\";\n            } else if (control.hasError(\"min\")) {\n              msg = \"This field required minimum value \" + control.errors.min.min;\n            } else if (control.hasError(\"max\")) {\n              msg = \"This field has maximum value \" + control.errors.max.max;\n            }\n            return msg;\n          }\n\n\n          enableUnit(field, myForm) {\n            if (myForm.get(field.name).value.in && (field.units.length > 1)) {\n              myForm.get(field.name).controls.unit.enable();\n\n            } else {\n                    if ( field.units.length > 1) {\n                   myForm.get(field.name).controls.unit.reset();\n                 }\n                    myForm.get(field.name).controls.unit.disable();\n            }\n          }\n\n          buildForm = () => {\n            const allControl = {};\n            let validators = [];\n            this.schema.forEach((element) => {\n\n                      //  Assign Validator to all form Control\n                      validators = [];\n\n                      if ( element.required) {\n                        validators.push(Validators.required);\n                      }\n                      if (element.dataType === \"String\") {\n                        validators.push(Validators.minLength(element.minLength));\n                        validators.push(Validators.maxLength(element.maxLength));\n                        validators.push(Validators.pattern(element.pattern));\n                      }\n                      if ((element.dataType === \"Number\" || element.dataType === \"Measure\")) {\n                        validators.push(Validators.max(element.max));\n                        validators.push(Validators.min(element.min));\n                      }\n                      if ( element.dataType === \"Measure\") {\n                        validators = [];\n                        let unitvalue = \"\";\n\n                        if ( element.units.length === 1) {\n                          unitvalue = element.units[0];\n\n                        }\n                        if ( element.required) {\n                             validators = [Validators.required, Validators.min(element.min), Validators.max(element.max)];\n                            }\n                        allControl[element.name] = this.formBuilder.group({\n                              in: [\"\", validators],\n                              unit: [{ value: unitvalue, disabled: true }, Validators.required]\n                            });\n\n                       } else {\n                        allControl[element.name] = [\"\", validators];\n                      }\n\n                    });\n\n            return this.formBuilder.group(allControl);\n          }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport {  FormGroup } from \"@angular/forms\";\nimport {ValidationServiceService} from \"./validation-service.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-json-form\",\n  templateUrl: \"./json-form.component.html\",\n  styleUrls: [\"./json-form.component.css\"],\n})\n\nexport class JsonFormComponent implements OnInit {\n  title = \"JsonForm\";\n  formGroup: FormGroup;\n  schema: any = this.http.get(`url:\"../../../assets/schema.json\"`);\n\n  constructor(private validationService: ValidationServiceService, private http: HttpClient) {\n\n  }\n\n  ngOnInit() {\n\n\n    this.formGroup = this.validationService.buildForm();\n\n      }\n\n      getEror(control) {\n        const controls = \"controls\";\n        if (!this.formGroup.get(control.name)[controls].unit.disabled) {\n          return this.validationService.getErrorMessage(this.formGroup.get(control.name)[controls].unit);\n\n        }\n      }\n\n      getError(control) {\n        if ( this.formGroup.get(control.name) instanceof FormGroup) {\n          const controls = \"controls\";\n          return this.validationService.getErrorMessage(this.formGroup.get(control.name)[controls].in);\n        }\n        return this.validationService.getErrorMessage(this.formGroup.get(control.name));\n      }\n\n      login = () => {\n        console.log(this.formGroup.value);\n      }\n\n      // To Reset all Form Control\n      reset = () => this.formGroup.reset();\n\n      // To enable/disable measure unit field\n      enable = (field) => {\n        this.validationService.enableUnit(field, this.formGroup);\n      }\n\n\n\n}\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from \"@angular/core\";\n\nimport _ from \"lodash\";\n\n@Component({\n  selector: \"app-form\",\n  templateUrl: \"./form.component.html\",\n  styleUrls: [\"./form.component.css\"]\n})\nexport class FormComponent implements OnInit, OnChanges {\n  @Input() modelSchema: any;\n  @Input() uiSchema: any;\n  modifiedUiSchema;\n\n  constructor() {  }\n\n  ngOnInit() {\n    this.initialize();\n    // console.log(this.formGroup);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (const propName in changes) {\n      const chng = changes[propName];\n      const cur = JSON.stringify(chng.currentValue);\n      const prev = JSON.stringify(chng.previousValue);\n      if (cur !== prev) {\n        this.initialize();\n      }\n    }\n  }\n\n  initialize = () => {\n    const uiSchema: any = Object.assign({}, this.uiSchema);\n\n    if (uiSchema.type === \"Normal\") {\n      uiSchema.fields = this.formatFields(uiSchema);\n    } else {\n      _.each(uiSchema.steps, (step) => {\n        step.fields = this.formatFields(step);\n      });\n    }\n    this.modifiedUiSchema = uiSchema;\n    this.modifiedUiSchema.name = this.modelSchema.name;\n  }\n\n  formatFields = (schema: any) => {\n    return _.map(schema.fields, (field) => {\n      const matchedField = _.find(this.modelSchema.properties, {name: field.name});\n      if (matchedField) {\n        return {...field, ...matchedField};\n      }\n    });\n  }\n}\n","import {BaseValidators} from \"./base-validator\";\r\nimport {Validators} from \"@angular/forms\";\r\n\r\nexport class RequiredValidator implements BaseValidators {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  get = () => {\r\n    return Validators.required;\r\n  }\r\n}\r\n","import {BaseValidators} from \"./base-validator\";\r\nimport {Validators} from \"@angular/forms\";\r\n\r\nexport class MinLengthValidator implements BaseValidators {\r\n\r\n  constructor() {\r\n  }\r\n  get = (minLength) => {\r\n    return Validators.minLength(minLength);\r\n  }\r\n}\r\n","/**\r\n * Created by rgarg on 08-07-2019.\r\n */\r\nimport {BaseValidators} from \"./base-validator\";\r\nimport {Validators} from \"@angular/forms\";\r\n\r\nexport class MaxLengthValidator implements BaseValidators {\r\n\r\n  constructor() {\r\n  }\r\n  get = (maxLength) => {\r\n    return Validators.maxLength(maxLength);\r\n  }\r\n}\r\n","/**\r\n * Created by rgarg on 08-07-2019.\r\n */\r\nimport {Validators} from \"@angular/forms\";\r\nexport class PatternValidator {\r\n  constructor() {\r\n  }\r\n  get = (pattern) => {\r\n    return Validators.pattern(pattern);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {CommonService} from \"../../../service/common.service\";\n\ndeclare const Mustache: any;\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ValidationMessageGeneratorService {\n\n  validationMessage: any = this.commonService.errorMessageJson;\n\n  constructor(private http: HttpClient, private commonService: CommonService) {\n\n  }\n\n  errorMessage = (formGroup, property) => {\n\n    let msg = \"Field is Invalid\";\n    const control = formGroup.get(property.name);\n    const fieldError = this.validationMessage.fields[property.name] ? this.validationMessage.fields[property.name] : \"\";\n\n    if (control.hasError(\"required\")) {\n      if (fieldError.required) {\n        msg = fieldError.required;\n      } else {\n        msg = this.validationMessage.common.required;\n      }\n    } else if (control.hasError(\"pattern\") && property.name === \"mobileNo\") {\n      if (fieldError.mobile) {\n        msg = fieldError.mobile;\n      } else {\n        msg = this.validationMessage.common.mobile;\n      }\n    } else if (control.hasError(\"pattern\")) {\n      if (fieldError.pattern) {\n        msg = fieldError.pattern;\n      } else {\n        msg = this.validationMessage.common.pattern;\n      }\n    } else if (control.hasError(\"minlength\")) {\n      if (fieldError.minLength) {\n        msg = fieldError.minLength;\n      } else {\n        msg = this.validationMessage.common.minLength;\n      }\n    } else if (control.hasError(\"maxlength\")) {\n      if (fieldError.maxLength) {\n        msg = fieldError.maxLength;\n      } else {\n        msg = this.validationMessage.common.maxLength;\n      }\n    } else if (control.hasError(\"min\")) {\n      if (fieldError.min) {\n        msg = fieldError.min;\n      } else {\n        msg = this.validationMessage.common.min;\n      }\n    } else if (control.hasError(\"max\")) {\n      if (fieldError.max) {\n        msg = fieldError.max;\n      } else {\n        msg = this.validationMessage.common.max;\n      }\n    } else if (control.hasError(\"email\")) {\n      if (fieldError.email) {\n        msg = fieldError.email;\n      } else {\n        msg = this.validationMessage.common.email;\n      }\n    }\n\n    const {alias, min, max, minLength, maxLength, pattern} = property;\n\n    return Mustache.render(msg, {fieldName: alias, min, max, minLength, maxLength, pattern});\n  }\n\n}\n","import {Component, OnInit, Input, Output, EventEmitter, OnChanges} from \"@angular/core\";\nimport {RequiredValidator} from \"../../validators/required-validator\";\nimport {MinLengthValidator} from \"../../validators/min-length-validators\";\nimport {MaxLengthValidator} from \"../../validators/max-length-validator\";\nimport {PatternValidator} from \"../../validators/pattern-validator\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {ValidationMessageGeneratorService} from \"../../validators/validation-message-generator.service\";\n\n@Component({\n  selector: \"app-text-field\",\n  templateUrl: \"./text-field.component.html\",\n  styleUrls: [\"./text-field.component.css\"]\n})\nexport class TextFieldComponent implements OnInit, OnChanges {\n\n  formGroup: FormGroup;\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private validationMessageGenerator: ValidationMessageGeneratorService) {\n  }\n\n  ngOnInit() {\n    this.addValidator();\n  }\n\n  ngOnChanges() {\n    // if (this.formGroup) {\n    //   this.formGroup.updateValueAndValidity();\n    // }\n  }\n\n  addValidator = () => {\n\n    const validators = [];\n    if (this.property.required) {\n      validators.push(new RequiredValidator().get());\n    }\n    if (this.property.minLength && this.property.minLength != null) {\n      validators.push(new MinLengthValidator().get(this.property.minLength));\n    }\n    if (this.property.maxLength && this.property.maxLength != null) {\n      validators.push(new MaxLengthValidator().get(this.property.maxLength));\n    }\n    if (this.property.pattern && this.property.pattern != null) {\n      validators.push(new PatternValidator().get(this.property.pattern));\n    }\n\n    this.formGroup = this.formBuilder.group({\n      [this.property.name]: [{\n        value: \"\",\n        disabled: !this.property.enable\n      }, validators]\n    });\n    this.formGroup.updateValueAndValidity();\n    this.addControl.emit({key: this.property.name, value: this.formGroup});\n  }\n\n  getError = () => {\n    return this.validationMessageGenerator.errorMessage(this.formGroup, this.property);\n  }\n}\n","/**\r\n * Created by rgarg on 08-07-2019.\r\n */\r\nimport {Validators} from \"@angular/forms\";\r\nexport class MaxValueValidator {\r\n  constructor() {\r\n  }\r\n  get = (maxValue) => {\r\n    return Validators.max(maxValue);\r\n  }\r\n}\r\n","/**\r\n * Created by rgarg on 08-07-2019.\r\n */\r\n\r\nimport {Validators} from \"@angular/forms\";\r\n\r\nexport class MinValueValidator {\r\n  constructor() {\r\n  }\r\n  get = (minValue) => {\r\n    return Validators.min(minValue);\r\n  }\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {FormBuilder, FormGroup } from \"@angular/forms\";\nimport {RequiredValidator} from \"../../validators/required-validator\";\nimport {MaxValueValidator} from \"../../validators/max-value-validator\";\nimport {MinValueValidator} from \"../../validators/min-value-validator\";\nimport {PatternValidator} from \"../../validators/pattern-validator\";\nimport {ValidationMessageGeneratorService} from \"../../validators/validation-message-generator.service\";\n@Component({\n  selector: \"app-number-field\",\n  templateUrl: \"./number-field.component.html\",\n  styleUrls: [\"./number-field.component.css\"]\n})\nexport class NumberFieldComponent implements OnInit {\n  formGroup: FormGroup;\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private validationMessageGenerator: ValidationMessageGeneratorService) { }\n\n  ngOnInit() {\n    this.addValidator();\n  }\n\n  addValidator = () => {\n\n        const validators = [];\n        if (this.property.required) {\n          validators.push(new RequiredValidator().get());\n        }\n        if (this.property.max && this.property.max != null ) {\n          validators.push(new MaxValueValidator().get(this.property.max));\n        }\n        if (this.property.max && this.property.min != null ) {\n          validators.push(new MinValueValidator().get(this.property.min));\n        }\n        if (this.property.pattern && this.property.pattern != null) {\n          validators.push(new PatternValidator().get(this.property.pattern));\n        }\n        this.formGroup = this.formBuilder.group({ [this.property.name] : [{value: \"\" , disabled: !this.property.enable}, validators]});\n        this.formGroup.updateValueAndValidity();\n        this.addControl.emit({key: this.property.name , value: this.formGroup});\n\n  }\n  getError = () => {\n    return this.validationMessageGenerator.errorMessage(this.formGroup, this.property);\n  }\n\n  // fieldValueChanged = () => {\n  //   this.changeEvent.emit(this.formFieldControl.value);\n  // }\n\n}\n","import {Component, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\nimport {FormGroup, FormBuilder} from \"@angular/forms\";\nimport {RequiredValidator} from \"../../validators/required-validator\";\nimport set = Reflect.set;\nimport {ValidationMessageGeneratorService} from \"../../validators/validation-message-generator.service\";\n@Component({\n  selector: \"app-dropdown\",\n  templateUrl: \"./dropdown.component.html\",\n  styleUrls: [\"./dropdown.component.css\"]\n})\nexport class DropdownComponent implements OnInit {\n  formGroup: FormGroup;\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private validationMessageGenerator: ValidationMessageGeneratorService) {\n  }\n\n  ngOnInit() {\n    this.addValidator();\n  }\n\n  addValidator() {\n\n    const validators = [];\n    let dropDowninitialValue = \"\";\n    let dropwDownDisable = false;\n\n    if (this.property.required) {\n      validators.push(new RequiredValidator().get());\n    }\n\n    if (this.property.values && this.property.values.length === 1) {\n      // setUnitValue.setValue(this.property.values[0]);\n      dropDowninitialValue = this.property.values[0];\n      dropwDownDisable = true;\n    } else {\n      dropwDownDisable = !this.property.enable;\n    }\n\n\n    this.formGroup = this.formBuilder.group(\n      {[this.property.name]: [{value: dropDowninitialValue, disabled: dropwDownDisable}, validators]}\n    );\n    this.formGroup.updateValueAndValidity();\n    this.addControl.emit({key: this.property.name, value: this.formGroup});\n\n  }\n  getError = () => {\n    return this.validationMessageGenerator.errorMessage(this.formGroup, this.property);\n  }\n}\n","import {Component, OnInit, Input, Output, EventEmitter} from \"@angular/core\";\nimport {FormGroup, FormControl, FormBuilder} from \"@angular/forms\";\n\n@Component({\n  selector: \"app-measure\",\n  templateUrl: \"./measure.component.html\",\n  styleUrls: [\"./measure.component.css\"]\n})\nexport class MeasureComponent implements OnInit {\n  formGroup: FormGroup = this.formBuilder.group({});\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  newProperty: any = {\n    measure: {}, unit: {}\n  };\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.newProperty.measure = {...this.property};\n    this.newProperty.measure.name += \"Measure\";\n    this.newProperty.unit = {...this.property};\n    this.newProperty.unit.name += \"Unit\";\n\n  }\n\n  onMeasureChange = (measureValue) => {\n    const control = this.formGroup.controls[this.newProperty.unit.name];\n    const values = \"values\";\n    if ( measureValue && this.property[values].length > 1 ) {\n      control.enable();\n    } else {\n      if (this.property[values].length > 1) {\n        control.reset();\n      }\n      control.disable();\n    }\n  }\n\n    addMeasureControl = (data) => {\n    this.formGroup.addControl(data.key, data.value);\n    this.formGroup.updateValueAndValidity();\n    this.addControl.emit({key: this.property.name , value: this.formGroup});\n\n  }\n\n\n}\n","import { Injectable } from \"@angular/core\";\nimport _ from \"lodash\";\nimport { HttpClient } from \"@angular/common/http\";\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DashboardService {\n\n  UISchema: any = this.http.get(`url: \"../../assets/ui-schema.json\"`);\n\n  constructor(private http: HttpClient) { }\n  modelSchema: any;  // it is initialized in auth service.\n  // formSchema: any;\n  schemaUrl = \"assets/schema.json\";\n  schema = {\n    model: {\n      form: {},\n      editor: {}\n    },\n    ui: {\n      form: {},\n      editor: {}\n    }\n  }\n  // getSchemaByHttp() {\n  //   return this.http.get(this.configUrl);\n  // }\n\n//   formModelSchema = (name) => {\n//\n//   const schema = {...this.modelSchema};\n//   const  entitySchema =  _.find(schema, (formSchema) => {\n//     if (formSchema.name === name) {\n//       return formSchema;\n//     }\n//   });\n//   if ( entitySchema.steps && entitySchema.steps !== null) {\n//     entitySchema.steps.forEach((step) => {\n//       step.refs = [...entitySchema.refs];\n//       step = this.mapsUnitToValue(step);\n//     });\n//   } else {\n//     entitySchema.properties =  this.mapsUnitToValue(entitySchema);\n//   }\n//   this.schema.model.form = {...entitySchema};\n//   return this.schema.model.form;\n// }\n\n  enitityModelSchema = (name) => {\n    const schema = {...this.modelSchema};\n    const  entitySchema =  _.find(schema, (formSchema) => {\n      if (formSchema.name === name) {\n        return formSchema;\n      }\n    });\n    if ( entitySchema.steps && entitySchema.steps !== null) {\n      entitySchema.steps.forEach((step) => {\n        step.refs = [...entitySchema.refs];\n        step = this.mapsUnitToValue(step);\n      });\n    } else {\n      entitySchema.properties =  this.mapsUnitToValue(entitySchema);\n    }\n    const modelEditor = {...entitySchema};\n    this.schema.model.form = modelEditor;\n    this.schema.model.editor = _.clone(modelEditor);\n    return this.schema.model.editor;\n  }\n\n  mapsUnitToValue = (refEntitySchema) => {\n\n    refEntitySchema.properties = refEntitySchema.properties.map((property: any) => {\n      if (property.dataType === \"Ref\") {\n        refEntitySchema.refs.forEach(ref => {\n          if (property.ref === ref.name) {\n            Object.keys(ref).forEach((key) => (ref[key] == null) && delete ref[key]);\n            delete ref.name;\n            Object.assign(property, ref);\n          }\n        });\n        //  property.values = [...property.units];\n\n      }\n      if (property.dataType === \"Measure\" && property.units) {\n        property.values = [...property.units];\n        delete property.units;\n      }\n      return property;\n    });\n    return refEntitySchema.properties;\n  }\n\n\n  uiSchema = (type) => {\n    const uiEditor = _.find(this.UISchema, {type});\n    this.schema.ui.form = _.cloneDeep(uiEditor);\n    this.schema.ui.editor = _.cloneDeep(uiEditor);\n    return this.schema.ui.editor;\n  }\n\n\n  init = async () => {\n    return this.http.get(this.schemaUrl).toPromise();\n  }\n}\n","import {Component, OnInit, ViewChild} from \"@angular/core\";\nimport {DashboardService} from \"./dashboard.service\";\nimport {JsonEditorComponent} from \"ang-jsoneditor\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"]\n})\nexport class DashboardComponent implements OnInit {\n\n  entity = [\n    {name: \"Aliquot\"}, {name: \"Case\"}, {name: \"Demographic\"},\n    {name: \"Diagnosis\"}, {name: \"Experiment\"}, {name: \"Instrument\"},\n    {name: \"InstrumentModel\"}, {name: \"Lab\"}, {name: \"Project\"},\n    {name: \"Protocol\"}, {name: \"Sample\"}\n  ];\n\n  formType = [\"Normal\", \"Group\"];\n  editorModelSchema: any;\n  formModelSchema: any;\n  editorUISchema: any;\n  formUISchema: any;\n  selected = \"Protocol\";\n  selectedType = \"Normal\";\n\n  @ViewChild(JsonEditorComponent, {static: false}) editor: JsonEditorComponent;\n\n\n  constructor(private dashboardService: DashboardService) {  }\n\n  ngOnInit() {\n    this.initialize();\n  }\n\n  initialize = () => {\n    this.editorModelSchema = this.dashboardService.enitityModelSchema(this.selected);\n    this.formModelSchema = this.dashboardService.schema.model.form;\n    this.editorUISchema = this.dashboardService.uiSchema(this.selectedType);\n    this.formUISchema = this.dashboardService.schema.ui.form;\n  }\n\n\n  reinitialize = () => {\n    this.initialize();\n  }\n\n  uiSchemaChange = (data) => {\n    this.formUISchema =  data;\n  }\n\n  modelSchemaChange = (data) => {\n    this.formModelSchema = data;\n  }\n\n  setUiSchema = (id) => {\n    this.editorUISchema = this.dashboardService.uiSchema(id);\n    this.formUISchema = this.dashboardService.schema.ui.form;\n  }\n}\n","import {Injectable} from \"@angular/core\";\nimport {User} from \"./user\";\nimport {auth} from \"firebase/app\";\nimport {AngularFireAuth} from \"@angular/fire/auth\";\nimport {AngularFirestore} from \"@angular/fire/firestore\";\nimport {AngularFireDatabase} from \"@angular/fire/database\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class AuthService {\n  userData: any; // Save logged in user uiSchemaData\n\n  constructor(\n    public afd: AngularFireDatabase,\n    public afs: AngularFirestore,   // Inject Firestore service\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n    public router: Router\n  ) {\n    /* Saving user uiSchemaData in localstorage when\n     logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem(\"user\", JSON.stringify(this.userData));\n      } else {\n        localStorage.setItem(\"user\", null);\n        JSON.parse(localStorage.getItem(\"user\"));\n      }\n    });\n  }\n\n  // Sign in with email/password\n  SignIn(email, password) {\n    return this.afAuth.auth.signInWithEmailAndPassword(email, password);\n\n  }\n\n      // Sign up with email/password\n\n  SignUp = async (email, password) => {\n\n    try {\n      const  result = await this.afAuth.auth.createUserWithEmailAndPassword(email, password);\n      this.SetUserData(result.user);\n      return result;\n    } catch (error) {\n      return error;\n    }\n\n  }\n\n      // Send email verfificaiton when new user sign up\n      sendVerificationMail() {\n\n        return this.afAuth.auth.currentUser.sendEmailVerification()\n          .then(() => {\n          //  this.router.navigate([\"verify-email-address\"]);\n          });\n      }\n\n  // // Reset Forggot password\n  // ForgotPassword(passwordResetEmail) {\n  //   return this.afAuth.auth.sendPasswordResetEmail(passwordResetEmail)\n  //     .then(() => {\n  //       window.alert(\"Password reset email sent, check your inbox.\");\n  //     }).catch((error) => {\n  //       window.alert(error)\n  //     })\n  // }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    return (user !== null) ? true : false;\n  }\n// && user.emailVerified !== false\n\n\n  // Sign in with Google\n  GoogleAuth = async () => {\n        try {\n          const result = await this.afAuth.auth.signInWithPopup(new auth.GoogleAuthProvider());\n          this.SetUserData(result.user);\n        } catch (error) {\n          window.alert(error);\n        }\n  }\n\n  // Auth logic to run auth providers\n  AuthLogin(provider) {\n    return this.afAuth.auth.signInWithPopup(provider);\n  }\n\n\n\n\n  // /* Setting up user uiSchemaData when sign in with username/password,\n  //  sign up with username/password and sign in with social auth\n  //  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user) {\n\n    const userRef = this.afd.database.ref(`users/${user.uid}`);\n\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName === null ? \"\" : user.displayName,\n      photoURL: user.photoURL === null ? \"\" : user.photoURL,\n      emailVerified: user.emailVerified\n    };\n\n    const response = userRef.set(userData);\n\n    // console.log(response);\n    return response;\n  }\n   // const signUpRef  = this.afd.database.ref(\"signUp\");\n    // signUpRef.push(userInfo);\n\n    //\n    // console.log(db.ref(\"users/\" + user.uid).set({\n    //     firstName: user.firstName,\n    //     lastName: user.lastName,\n    //     email: user.email,\n    //\n    // }));\n\n\n  // Sign out\n  SignOut() {\n    return this.afAuth.auth.signOut().then(() => {\n      localStorage.removeItem(\"user\");\n      this.router.navigate([\"\"]);\n    });\n  }\n\n  // read Data from Firebase database\n  getUsers = () => {\n\n    const userRef = this.afd.database.ref(\"users/NoWPNhcWEXX5npSgSk3GdGxIdVw2\");\n\n    userRef.once(\"value\").then((snapshot) => {\n      const  username = snapshot.val() || \"Anonymous\";\n      // console.log(username);\n    });\n  }\n\n}\n\n\n\n","import { Injectable } from \"@angular/core\";\nimport {MatSnackBar, MatSnackBarConfig} from \"@angular/material\";\n@Injectable({\n  providedIn: \"root\"\n})\nexport class SnackBarMessageService {\n\n  config: MatSnackBarConfig = { duration: 2000 };\n\n  constructor(private snackBar: MatSnackBar) { }\n\n  show = (message, action?) => {\n    this.snackBar.open(message, action, this.config);\n  }\n}\n","import {Component, Inject, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {AuthService} from \"../services/auth.service\";\nimport {CommonService} from \"../../service/common.service\";\nimport {SnackBarMessageService} from \"../../service/snack-bar-message.service\";\nimport {HttpClient} from \"@angular/common/http\";\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.css\"]\n})\nexport class SignupComponent implements OnInit {\n  formGroup: FormGroup = this.formBuilder.group({});\n  schema: any = this.commonService.signUpJson;\n\n  constructor(private router: Router, public dialogRef: MatDialogRef<SignupComponent>, @Inject(MAT_DIALOG_DATA)public data: any,\n              private formBuilder: FormBuilder, private http: HttpClient, public authService: AuthService,\n              private commonService: CommonService, private snackBarMessageService: SnackBarMessageService ) {\n  }\n\n  ngOnInit() {\n  }\n\n\n  signup = async () => {\n\n    this.commonService.showHideSpinner(true);\n    try {\n      await this.authService.SignUp(this.formGroup.controls[\"email\"].value[\"email\"], this.formGroup.controls[\"password\"].value[\"password\"]);\n     // this.authService.sendVerificationMail();\n      this.commonService.showHideSpinner(false);\n      this.router.navigate([\"dashboard\"]);\n      this.snackBarMessageService.show(\"User Registered Successfully\");\n      this.dialogRef.close();\n\n    } catch (error) {\n      if (error) {\n        console.log(error);\n        this.snackBarMessageService.show(error.message);\n      }\n      this.commonService.showHideSpinner(false);\n\n    }\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n\n  }\n  getError = (fieldName): string => {\n\n    if (this.formGroup.controls[fieldName].hasError(\"required\")) {\n      return \"You must enter a value\" ;\n    }\n    if (this.formGroup.controls[fieldName].hasError(\"pattern\") && fieldName === (\"password\" || \"confirmPassword\")) {\n      return \"This field contain only character value.\";\n    }\n    if (this.formGroup.controls[fieldName].hasError(\"pattern\")) {\n      return \"This field contain only character value.\";\n    }\n    if (this.formGroup.controls[fieldName].hasError(\"email\")) {\n      return \"Invalid Email !\";\n    }\n\n    return \"error\";\n  }\n\n  addControl = (data) => {\n    this.formGroup.addControl(data.key, data.value);\n    this.formGroup.updateValueAndValidity();\n  }\n\n}\n\n\n\n\n\n\n\n","import {Component, Inject, OnInit} from \"@angular/core\";\nimport {Router} from \"@angular/router\";\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from \"@angular/material\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { AuthService } from \"../services/auth.service\";\nimport {CommonService} from \"../../service/common.service\";\nimport {SnackBarMessageService} from \"../../service/snack-bar-message.service\";\nimport {SignupComponent} from \"../signup/signup.component\";\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  formGroup: FormGroup;\n\n  constructor(private router: Router, public dialogRef: MatDialogRef<LoginComponent>, @Inject(MAT_DIALOG_DATA)public data: any,\n              private formBuilder: FormBuilder, public authService: AuthService, private commonService: CommonService,\n              private snackBarMessageService: SnackBarMessageService, private dialog: MatDialog ) {\n  }\n\n  ngOnInit() {\n    this.formGroup = this.formBuilder.group({\n      email: [\"r@gmail.com\", [Validators.required, Validators.email]],\n      password: [\"rishi1997\", [Validators.required]]\n\n    });\n\n    this.authService.getUsers();\n  }\n  login = async (mode) => {\n    this.commonService.showHideSpinner(true);\n\n    try {\n      if (mode === \"google\") {\n        this.commonService.showHideSpinner(false);\n        await this.authService.GoogleAuth();\n      } else {\n        await this.authService.SignIn(this.formGroup.controls[\"email\"].value, this.formGroup.controls[\"password\"].value);\n        this.commonService.showHideSpinner(false);\n      }\n      this.snackBarMessageService.show(\"LogIn Successfull\");\n      this.router.navigate([\"dashboard\"]);\n\n      this.dialogRef.close();\n\n    } catch (error) {\n      if (error) {\n         if ( error.code === \"auth/user-not-found\") {\n           this.openSignupDialog();\n         } else {\n           this.snackBarMessageService.show(error.message);\n         }\n      }\n      this.commonService.showHideSpinner(false);\n\n    }\n\n  }\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n  getError = (fieldName): string => {\n\n    if (this.formGroup.controls[fieldName].hasError(\"required\")) {\n      return fieldName + \" is required. \";\n    }\n    if (this.formGroup.controls[fieldName].hasError(\"email\")) {\n      return \"Invalid Email !\";\n    }\n\n    return \"error\";\n  }\n  openSignupDialog = (): void => {\n    this.dialog.closeAll();\n    const dialogRef = this.dialog.open(SignupComponent);\n\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n\n  }\n\n}\n\n\n\n","import { Injectable } from \"@angular/core\";\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport {AuthService} from \"../entryComponent/services/auth.service\";\nimport {MatDialog} from \"@angular/material\";\nimport {LoginComponent} from \"../entryComponent/login/login.component\";\nimport {DashboardService} from \"../dashboard/dashboard.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\n\nexport class AuthenticationGuard implements CanActivate  {\n\n  constructor(private authService: AuthService, private router: Router, private dialog: MatDialog,\n              private dashboardService: DashboardService) {\n\n  }\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    if (!this.authService.isLoggedIn) {\n      const dialogRef = this.dialog.open(LoginComponent);\n\n      dialogRef.afterClosed().subscribe(result => {\n      });\n      return false;\n    }\n\n    return this.init();\n  }\n\n  init = async () => {\n    this.dashboardService.modelSchema = await this.dashboardService.init();\n    return true;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\nimport {AuthenticationGuard} from \"./guard/authentication.guard\";\n\n\nconst routes: Routes = [\n  { path: \"dashboard\", component: DashboardComponent, canActivate: [AuthenticationGuard] }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes)],\n  exports: [ RouterModule ]\n})\n\n\nexport class AppRoutingModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport {MatDialog} from \"@angular/material\";\nimport {LoginComponent} from \"../../entryComponent/login/login.component\";\nimport {SignupComponent} from \"../../entryComponent/signup/signup.component\";\nimport {AuthService} from \"../../entryComponent/services/auth.service\";\n\n\n@Component({\n  selector: \"app-tool-bar\",\n  templateUrl: \"./tool-bar.component.html\",\n  styleUrls: [\"./tool-bar.component.css\"]\n})\nexport class ToolBarComponent implements OnInit {\n\n  constructor(private dialog: MatDialog, public authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  openLoginDialog = (): void  => {\n    const dialogRef = this.dialog.open(LoginComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n\n  }\n\n  openSignupDialog = (): void => {\n    const dialogRef = this.dialog.open(SignupComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {RequiredValidator} from \"../../validators/required-validator\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ValidationMessageGeneratorService} from \"../../validators/validation-message-generator.service\";\n\n@Component({\n  selector: \"app-email-field\",\n  templateUrl: \"./email-field.component.html\",\n  styleUrls: [\"./email-field.component.css\"]\n})\nexport class EmailFieldComponent implements OnInit {\n  formGroup: FormGroup;\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private validationMessageGenerator: ValidationMessageGeneratorService) {\n  }\n\n  ngOnInit() {\n    this.addValidator();\n  }\n\n  addValidator = () => {\n\n    const validators = [];\n    if (this.property.required) {\n      validators.push(new RequiredValidator().get());\n    }\n    validators.push(Validators.email);\n\n    this.formGroup = this.formBuilder.group({\n      [this.property.name]: [{\n        value: \"\",\n        disabled: !this.property.enable\n      }, validators]\n    });\n    this.formGroup.updateValueAndValidity();\n    this.addControl.emit({key: this.property.name, value: this.formGroup});\n  }\n  getError = () => {\n    return this.validationMessageGenerator.errorMessage(this.formGroup, this.property);\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from \"@angular/core\";\nimport {RequiredValidator} from \"../../validators/required-validator\";\nimport {MaxLengthValidator} from \"../../validators/max-length-validator\";\nimport {PatternValidator} from \"../../validators/pattern-validator\";\nimport {MinLengthValidator} from \"../../validators/min-length-validators\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport {ValidationMessageGeneratorService} from \"../../validators/validation-message-generator.service\";\n\n@Component({\n  selector: \"app-password-field\",\n  templateUrl: \"./password-field.component.html\",\n  styleUrls: [\"./password-field.component.css\"]\n})\nexport class PasswordFieldComponent implements OnInit {\n\n  formGroup: FormGroup;\n  @Input() property;\n  @Output() public addControl = new EventEmitter();\n\n  constructor(private formBuilder: FormBuilder, private validationMessageGenerator: ValidationMessageGeneratorService) { }\n\n  ngOnInit() {\n    this.addValidator();\n  }\n\n  addValidator = () => {\n    // validators.push(new RequiredValidator());\n\n    const validators = [];\n    if (this.property.required) {\n      validators.push(new RequiredValidator().get());\n    }\n    if (this.property.minLength && this.property.minLength != null ) {\n      validators.push(new MinLengthValidator().get(this.property.minLength));\n    }\n    if (this.property.maxLength && this.property.maxLength != null ) {\n      validators.push(new MaxLengthValidator().get(this.property.maxLength));\n    }\n    if (this.property.pattern && this.property.pattern != null) {\n      validators.push(new PatternValidator().get(this.property.pattern));\n    }\n\n    this.formGroup = this.formBuilder.group({ [this.property.name] : [{value: \"\" , disabled: !this.property.enable}, validators] });\n    this.formGroup.updateValueAndValidity();\n    this.addControl.emit({key: this.property.name , value: this.formGroup});\n  }\n  getError = () => {\n    return this.validationMessageGenerator.errorMessage(this.formGroup, this.property);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment: any = {\r\n  production: false,\r\n  firebaseConfig : {\r\n    apiKey: \"AIzaSyAhthWRtzWHuG_C6xyKhNU3wPD_Ck9PS34\",\r\n    authDomain: \"form-35b09.firebaseapp.com\",\r\n    databaseURL: \"https://form-35b09.firebaseio.com\",\r\n    projectId: \"form-35b09\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"368882932305\",\r\n    appId: \"1:368882932305:web:891e308aaacd6c73\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-loading-spinner\",\n  templateUrl: \"./loading-spinner.component.html\",\n  styleUrls: [\"./loading-spinner.component.css\"]\n})\nexport class LoadingSpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, OnInit, Input, OnChanges} from \"@angular/core\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport _ from \"lodash\";\n\n@Component({\n  selector: \"app-step-form\",\n  templateUrl: \"./step-form.component.html\",\n  styleUrls: [\"./step-form.component.css\"]\n})\nexport class StepFormComponent implements OnInit, OnChanges {\n  formGroup: FormGroup = this.formBuilder.group({});\n  @Input() uiSchema: any;\n\n  constructor(private formBuilder: FormBuilder) {\n  }\n  ngOnInit() {\n    const allSteps = [];\n    const steps = _.range(this.uiSchema.totalSteps);\n    steps.forEach((step) => {\n      allSteps[step] = this.formBuilder.group({});\n    });\n    this.formGroup = this.formBuilder.group(allSteps);\n  }\n\n  ngOnChanges() {\n    this.formGroup = this.formBuilder.group({});  // when ui or model formSchema changes re initialize form group\n  }\n\n  addControl = (data) => {\n    _.each(this.uiSchema.steps, (step) => {\n      const matchedField = _.find(step.fields, (field) => {\n        return field.name === data.key;\n      });\n      if (matchedField) {\n        const fc: any = this.formGroup.controls[step.sequence - 1];\n        fc.addControl(data.key, data.value);\n        this.formGroup.updateValueAndValidity();\n      }\n    });\n  }\n\n  formValue = () => {\n    console.log(this.formGroup.getRawValue());\n  }\n\n  reset = () => {\n    this.formGroup.reset();\n  }\n}\n","import {AfterViewInit, Component, Input, OnChanges, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: \"app-simple\",\n  templateUrl: \"./simple.component.html\",\n  styleUrls: [\"./simple.component.css\"]\n})\nexport class SimpleComponent implements OnInit, OnChanges {\n  formGroup: FormGroup = this.formBuilder.group({});\n  @Input() uiSchema;\n\n  constructor(private formBuilder: FormBuilder) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.formGroup = this.formBuilder.group({}); // when ui or model formSchema changes re initialize form group\n  }\n\n  addControl = (data) => {\n    this.formGroup.addControl(data.key, data.value);\n    this.formGroup.updateValueAndValidity();\n  }\n  getFormValue = () => {\n    console.log(this.formGroup.getRawValue());\n  }\n\n  reset = () => {\n    console.log(this.formGroup);\n    this.formGroup.reset();\n  }\n\n}\n","import {Component, Input, OnChanges, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport _ from \"lodash\";\n\n@Component({\n  selector: \"app-accordian\",\n  templateUrl: \"./accordian.component.html\",\n  styleUrls: [\"./accordian.component.css\"]\n})\nexport class AccordianComponent implements OnInit, OnChanges {\n  formGroup: FormGroup = this.formBuilder.group({});\n  step = 0;\n  @Input() uiSchema: any;\n\n  constructor(private formBuilder: FormBuilder) {\n  }\n  ngOnInit() {\n    console.log(\"UI Schema\", this.uiSchema);\n    const allSteps = [];\n    const steps = _.range(this.uiSchema.totalSteps);\n    steps.forEach((step) => {\n      allSteps[step] = this.formBuilder.group({});\n    });\n    this.formGroup = this.formBuilder.group(allSteps);\n  }\n  ngOnChanges() {\n    this.formGroup = this.formBuilder.group({});  // when ui or model formSchema changes re initialize form group\n  }\n\n\n  addControl = (data) => {\n    _.each(this.uiSchema.steps, (step) => {\n      const matchedField = _.find(step.fields, (field) => {\n        return field.name === data.key;\n      });\n      if (matchedField) {\n        const fc: any = this.formGroup.controls[step.sequence - 1];\n        fc.addControl(data.key, data.value);\n        this.formGroup.updateValueAndValidity();\n      }\n    });\n  }\n\n  formValue = () => {\n    console.log(this.formGroup.getRawValue());\n  }\n\n  reset = () => {\n    this.formGroup.reset();\n  }\n\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n}\n","import {Component, Input, OnChanges, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormGroup} from \"@angular/forms\";\nimport _ from \"lodash\";\n\n@Component({\n  selector: \"app-tab\",\n  templateUrl: \"./tab.component.html\",\n  styleUrls: [\"./tab.component.css\"]\n})\nexport class TabComponent implements OnInit, OnChanges {\n  formGroup: FormGroup = this.formBuilder.group({});\n  @Input() uiSchema: any;\n\n  constructor(private formBuilder: FormBuilder) {\n  }\n  ngOnInit() {\n    this.buildStepFormGroup();\n  }\n\n  ngOnChanges() {\n    this.buildStepFormGroup();\n  }\n\n  buildStepFormGroup = () => {\n    const allSteps = [];\n    const steps = _.range(this.uiSchema.totalSteps);\n    steps.forEach((step) => {\n      allSteps[step] = this.formBuilder.group({});\n    });\n    this.formGroup = this.formBuilder.group(allSteps);\n  }\n\n\n  addControl = (data) => {\n    _.each(this.uiSchema.steps, (step) => {\n      const matchedField = _.find(step.fields, (field) => {\n        return field.name === data.key;\n      });\n      if (matchedField) {\n        const fc: any = this.formGroup.controls[step.sequence - 1];\n        fc.addControl(data.key, data.value);\n        this.formGroup.updateValueAndValidity();\n      }\n    });\n  }\n\n  formValue = () => {\n    console.log(this.formGroup.getRawValue());\n  }\n\n  reset = () => {\n    this.formGroup.reset();\n  }\n\n\n\n}\n","import {Component, DoCheck, EventEmitter, HostListener, Input, OnInit, Output, ViewChild} from \"@angular/core\";\nimport { JsonEditorComponent, JsonEditorOptions } from \"ang-jsoneditor\";\n\n@Component({\n  selector: \"app-ui-schema\",\n  templateUrl: \"./ui-schema.component.html\",\n  styleUrls: [\"./ui-schema.component.css\"]\n})\nexport class UiSchemaComponent implements OnInit {\n  @ViewChild(JsonEditorComponent, {static: false}) editor: JsonEditorComponent;\n\n  @Input() uiSchemaData: any;\n  @Output() public uiSchemaChange = new EventEmitter();\n\n  public uiSchemaEditorOptions: JsonEditorOptions;\n\n  constructor() {\n    this.uiSchemaEditorOptions = new JsonEditorOptions();\n    this.uiSchemaEditorOptions.mode = \"code\";\n  }\n\n\n  ngOnInit() {\n    console.log(\"Old UI Schema\", this.uiSchemaData);\n  }\n\n  getData(event) {\n    if (this.editor.isValidJson()) {\n      this.uiSchemaChange.emit(this.editor.get());\n    } else {\n      console.log(\"UI Schema is incorrect\");\n    }\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from \"@angular/core\";\nimport {JsonEditorComponent, JsonEditorOptions} from \"ang-jsoneditor\";\n\n@Component({\n  selector: \"app-model-schema\",\n  templateUrl: \"./model-schema.component.html\",\n  styleUrls: [\"./model-schema.component.css\"]\n})\nexport class ModelSchemaComponent implements OnInit {\n  @ViewChild(JsonEditorComponent, {static: false}) editor: JsonEditorComponent;\n\n  @Input() modelSchemaData: any;\n  @Output() public modelSchemaChange = new EventEmitter();\n\n  public modelSchemaEditorOptions: JsonEditorOptions;\n\n  constructor() {\n    this.modelSchemaEditorOptions = new JsonEditorOptions();\n    this.modelSchemaEditorOptions.mode = \"code\";\n  }\n\n\n  ngOnInit() {\n    console.log(\"Old model Schema\", this.modelSchemaData);\n  }\n\n  getData(event) {\n    if (this.editor.isValidJson()) {\n      this.modelSchemaChange.emit(this.editor.get());\n      console.log(\"correct\");\n    } else {\n      // console.log(\"UI Schema is incorrect\");\n    }\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-radio\",\n  templateUrl: \"./radio.component.html\",\n  styleUrls: [\"./radio.component.css\"]\n})\nexport class RadioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from \"@angular/core\";\n\nimport {AppComponent} from \"./app.component\";\nimport {AngularMaterialModule} from \"./Modules/angular-material.module\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {JsonFormComponent} from \"./component/json-form/json-form.component\";\nimport {ValidationServiceService} from \"./component/json-form/validation-service.service\";\nimport {FormComponent} from \"./component/ex-form/form.component\";\nimport {TextFieldComponent} from \"./component/ex-form/form-field/text/text-field.component\";\nimport {NumberFieldComponent} from \"./component/ex-form/form-field/number/number-field.component\";\nimport {DropdownComponent} from \"./component/ex-form/form-field/dropdown/dropdown.component\";\nimport {MeasureComponent} from \"./component/ex-form/form-field/measure/measure.component\";\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {LoginComponent} from \"./entryComponent/login/login.component\";\nimport {ToolBarComponent} from \"./header/tool-bar/tool-bar.component\";\nimport {MatDialogModule} from \"@angular/material\";\nimport {SignupComponent} from \"./entryComponent/signup/signup.component\";\nimport {EmailFieldComponent} from \"./component/ex-form/form-field/email/email-field.component\";\nimport {PasswordFieldComponent} from \"./component/ex-form/form-field/password/password-field.component\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\n\nimport {SocialLoginModule, AuthServiceConfig, FacebookLoginProvider} from \"angularx-social-login\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {NgJsonEditorModule} from \"ang-jsoneditor\";\n\n\n// firebase\nimport {AngularFireModule} from \"@angular/fire\";\nimport {environment} from \"../environments/environment\";\nimport {AngularFireAuthModule} from \"@angular/fire/auth\";\nimport {AngularFirestoreModule} from \"@angular/fire/firestore\";\nimport {AngularFireDatabaseModule} from \"@angular/fire/database\";\n\n\nimport {AuthService} from \"./entryComponent/services/auth.service\";\nimport {LoadingSpinnerComponent} from \"./loading-spinner/loading-spinner.component\";\nimport {CommonService} from \"./service/common.service\";\nimport {StepFormComponent} from \"./component/ex-form/viewer/group/step-wizard/step-form.component\";\nimport {SimpleComponent} from \"./component/ex-form/viewer/basic/simple/simple.component\";\nimport {AccordianComponent} from \"./component/ex-form/viewer/group/accordian/accordian.component\";\nimport {TabComponent} from \"./component/ex-form/viewer/group/tabs/tab/tab.component\";\nimport {UiSchemaComponent} from \"./json-editor/ui-schema/ui-schema.component\";\nimport {ModelSchemaComponent} from \"./json-editor/model-schema/model-schema.component\";\nimport { RadioComponent } from \"./component/ex-form/form-field/radio/radio.component\";\nimport {ValidationMessageGeneratorService} from \"./component/ex-form/validators/validation-message-generator.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JsonFormComponent,\n    FormComponent,\n    TextFieldComponent,\n    NumberFieldComponent,\n    DropdownComponent,\n    MeasureComponent,\n    DashboardComponent,\n    LoginComponent,\n    ToolBarComponent,\n    SignupComponent,\n    EmailFieldComponent,\n    PasswordFieldComponent,\n    LoadingSpinnerComponent,\n    StepFormComponent,\n    SimpleComponent,\n    AccordianComponent,\n    TabComponent,\n    UiSchemaComponent,\n    ModelSchemaComponent,\n    RadioComponent\n  ],\n  imports: [\n    FormsModule,\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    CommonModule,\n    AppRoutingModule,\n    MatDialogModule,\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFireModule, // Only required for auth features,\n    AngularFirestoreModule,\n    MatSnackBarModule,\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n    MatExpansionModule,\n    MatTabsModule,\n    SocialLoginModule,\n    HttpClientModule,\n    NgJsonEditorModule\n\n  ],\n  entryComponents: [\n    LoginComponent, SignupComponent\n  ],\n\n  providers: [ValidationServiceService,\n    ValidationMessageGeneratorService,\n    AuthService,\n    CommonService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n"]}